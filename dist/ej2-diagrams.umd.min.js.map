{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/utility/base-util.js","../src/diagram/utility/dom-util.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/diagram-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/interaction/selector.js","../src/diagram/core/elements/html-element.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    collection.push({ command: char, x: ob[1], y: ob[2] });\n                    break;\n                case 'l':\n                case 't':\n                    collection.push({ command: char, x: ob[1], y: ob[2] });\n                    break;\n                case 'h':\n                    collection.push({ command: char, x: ob[1] });\n                    break;\n                case 'v':\n                    collection.push({ command: char, y: ob[1] });\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    collection.push({ command: char, x1: ob[1], y1: ob[2], x2: ob[3], y2: ob[4], x: ob[5], y: ob[6] });\n                    break;\n                case 's':\n                    collection.push({ command: char, x2: ob[1], y2: ob[2], x: ob[3], y: ob[4] });\n                    break;\n                case 'q':\n                    collection.push({ command: char, x1: ob[1], y1: ob[2], x: ob[3], y: ob[4] });\n                    break;\n                case 'a':\n                    var l = ob[4];\n                    var s = ob[5];\n                    collection.push({ command: char, r1: ob[1], r2: ob[2], angle: ob[3], largeArc: l, sweep: s, x: ob[6], y: ob[7] });\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            Math.floor(Math.random() * chars.length);\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners = new Rect();\n    var top = element.offsetY - element.actualSize.height * element.pivot.y;\n    var bottom = element.offsetY + element.actualSize.height * (1 - element.pivot.y);\n    var left = element.offsetX - element.actualSize.width * element.pivot.x;\n    var right = element.offsetX + element.actualSize.width * (1 - element.pivot.x);\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var topLeft = { x: left, y: top };\n    var topRight = { x: right, y: top };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    corners = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners = corners;\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        topLeft = transformPointByMatrix(matrix, topLeft);\n        topRight = transformPointByMatrix(matrix, topRight);\n        bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId'];\n        case 'connectors':\n            return ['parentId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = svg.children[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement } from '@syncfusion/ej2-base';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = svg.children[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = svg.children[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = eachLine[j].split(' ');\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = document.createElement('Span');\n    text.setAttribute('style', 'display:inline-block ; line-height: normal');\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(diagramId) {\n    var diagramElement = document.getElementById(diagramId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n/** @private */\nexport function getExpandCollapseLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramPortSvg = getPortLayerSvg(diagramId);\n    expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander');\n    return expandCollapse;\n}\n/** @private */\nexport function getPortsLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramPortSvg = getPortLayerSvg(diagramId);\n    expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts');\n    return expandCollapse;\n}\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = document.createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var element = document.getElementById(contentId);\n    var div = (contentId && element) ? document.getElementById(contentId).querySelector('#' + elementId) :\n        document.getElementById(elementId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString({}); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createElement('div', { id: 'measureElement', styles: 'visibility:hidden' });\n        var text = document.createElement('Span');\n        text.setAttribute('style', 'display:inline-block ; line-height: normal');\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = document.createElement('img');\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the behavior of Tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, srcNode.corners, srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, source.corners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, target.corners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.topCenter.y > target.corners.bottomCenter.y &&\n                    Math.abs(source.corners.topCenter.y - target.corners.bottomCenter.y) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottomCenter.y < target.corners.topCenter.y &&\n                    Math.abs(source.corners.bottomCenter.y - target.corners.topCenter.y) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if (source.corners.middleRight.x < target.corners.middleLeft.x &&\n                    Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) >\n                        (source.margin.right + source.margin.left)) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if (source.corners.middleLeft.x > target.corners.middleRight.x &&\n                    Math.abs(source.corners.middleLeft.x - target.corners.middleRight.x) >\n                        (source.margin.left + source.margin.right)) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!source.corners.equals(source.corners, target.corners)) &&\n                        target.corners.containsPoint(source.corners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, source.corners, element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.middleLeft.x && target.point.x < source.corners.middleRight.x) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.topCenter.y && target.point.y < source.corners.bottomCenter.y) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.topCenter.y\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.topCenter.y && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.topCenter.y + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottomCenter.y) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottomCenter.y)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottomCenter.y - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.middleLeft.x\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.middleLeft.x && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.middleLeft.x + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.middleRight.x\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.middleRight.x && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.middleRight.x - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.middleLeft.x <= source.point.x && source.point.x <= target.corners.middleRight.x))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.topCenter.y)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.topCenter.y) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottomCenter.y)) {\n            direction = 'Bottom';\n            length = (target.corners.bottomCenter.y - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.topCenter.y <= source.point.y && source.point.y <= source.corners.bottomCenter.y) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.topCenter.y + 20) :\n                (source.corners.bottomCenter.y - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.topCenter.y < source.point.y && source.point.y <= target.corners.bottomCenter.y))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.middleLeft.x)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.middleLeft.x) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.middleRight.x)) {\n            direction = 'Right';\n            length = (target.corners.middleRight.x - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.middleLeft.x <= source.point.x && source.point.x <= source.corners.middleRight.x) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.middleLeft.x + 20) :\n                (source.corners.middleRight.x - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.topCenter.y &&\n                source.point.y <= source.corners.bottomCenter.y)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.topCenter.y > source.point.y && target.corners.bottomCenter.y < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.topCenter.y < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottomCenter.y < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.topCenter.y &&\n                source.point.y <= source.corners.bottomCenter.y)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.topCenter.y <= source.point.y\n                && target.corners.bottomCenter.y >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.middleLeft.x &&\n                source.point.x <= source.corners.middleRight.x) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.middleLeft.x &&\n                source.point.x < target.corners.middleRight.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.middleLeft.x &&\n                target.corners.middleRight.x > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.middleLeft.x &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.middleRight.x &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, source.corners, element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.topCenter.y &&\n            source.point.y <= source.corners.bottomCenter.y) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.topCenter.y <= source.point.y && target.corners.bottomCenter.y >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.middleLeft.x <= source.point.x && target.corners.middleRight.x >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottomCenter.y - source.point.y + 20) :\n                (source.point.y - source.corners.topCenter.y + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.middleRight.x - source.point.x + 20) :\n                (source.point.x - source.corners.middleLeft.x + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.middleLeft.x + 20) :\n                    (source.corners.middleRight.x - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.topCenter.y + 20) :\n                    (source.corners.bottomCenter.y - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, sourceNode.corners, sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var direction = getPortDirection(port, sourceNode.corners, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, sourceNode.corners, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findEndPoint(source.direction, nodeConnectingPoint, node);\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { X1: sPt.x, Y1: sPt.y, X2: tPt.x, Y2: tPt.y };\n    return line;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(source.corners, source.direction);\n            refPoint = findEndPoint(source.direction, source.point, sourceEle);\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(target.corners, target.direction);\n            refPoint = findEndPoint(target.direction, target.point, targetEle);\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, source.corners, ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.middleLeft.x && target.point.x <= source.corners.middleRight.x &&\n        source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.topCenter.y + 20) :\n            (source.corners.bottomCenter.y - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.topCenter.y\n            && source.point.y <= source.corners.bottomCenter.y)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.middleLeft.x\n            && source.point.x <= source.corners.middleRight.x)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottomCenter.y - source.point.y + 20) :\n            (source.point.y - source.corners.topCenter.y + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (ele.targetWrapper.corners.containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottomCenter.y) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottomCenter.y + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.topCenter.y) {\n                    segment.points[segment.points.length - 1].y = target.corners.topCenter.y - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.middleLeft.x) {\n                    segment.points[segment.points.length - 1].x = target.corners.middleLeft.x - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.middleRight.x) {\n                    segment.points[segment.points.length - 1].x = target.corners.middleRight.x + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = node.corners;\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findEndPoint(target.direction, target.point, node);\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\nfunction findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\nfunction getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    if (ele.type === 'Orthogonal') {\n        var constValue = Math.abs(child.bounds.height - child.actualSize.height) / 2 + 5;\n        if (sPt.x === tPt.x) {\n            if (sPt.y < tPt.y) {\n                sPt.y -= constValue;\n            }\n            else {\n                sPt.y += constValue;\n            }\n        }\n        constValue = Math.abs(child.bounds.width - child.actualSize.width) / 2 + 5;\n        if (sPt.y === tPt.y) {\n            if (sPt.x < tPt.x) {\n                sPt.x -= constValue;\n            }\n            else {\n                sPt.x += constValue;\n            }\n        }\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { X1: sPt.x, Y1: sPt.y, X2: tPt.x, Y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || ((isTar) ? tPt : sPt);\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        X1: pts[0].x, Y1: pts[0].y, X2: pts[1].x,\n        Y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                X1: pts[i].x, Y1: pts[i].y,\n                X2: pts[i + 1].x, Y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.X1;\n    var y1 = segment1.Y1;\n    var x2 = segment1.X2;\n    var y2 = segment1.Y2;\n    var x3 = segment2.X1;\n    var y3 = segment2.Y1;\n    var x4 = segment2.X2;\n    var y4 = segment2.Y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction findEndPoint(direction, point, node) {\n    var targetPoint;\n    switch (direction) {\n        case 'Bottom':\n            targetPoint = { x: point.x, y: point.y - Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n        case 'Top':\n            targetPoint = { x: point.x, y: point.y + Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n        case 'Right':\n            targetPoint = { y: point.y, x: point.x - Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n        case 'Left':\n            targetPoint = { y: point.y, x: point.x + Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n    }\n    return targetPoint;\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottomCenter.y + margin < target.corners.topCenter.y - margin ||\n        source.corners.topCenter.y - margin > target.corners.bottomCenter.y + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.middleRight.x < target.corners.middleLeft.x\n        || (swap && source.corners.middleRight.x < target.corners.middleLeft.x))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.middleRight.x + source.margin.right < target.corners.middleLeft.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (source.corners.containsPoint(left) || target.corners.containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottomCenter.y <= target.corners.topCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.topCenter.y >= target.corners.topCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.topCenter.y) ||\n        (srcPort === undefined && source.corners.middleRight.y <= target.corners.topCenter.y)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottomCenter.y) ||\n        (srcPort === undefined && source.corners.middleRight.y >= target.corners.bottomCenter.y)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.middleRight.x >= targetObj.corners.middleRight.x) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.topCenter.y ||\n            sourcePort.offsetY > targetObj.corners.bottomCenter.y)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.topCenter.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottomCenter.y + targetObj.margin.bottom\n            && sourceObj.corners.topCenter.y > targetObj.corners.bottomCenter.y) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottomCenter.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.topCenter.y\n            && sourceObj.corners.bottomCenter.y > targetObj.corners.topCenter.y) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottomCenter.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.middleRight.x < targetObj.corners.middleLeft.x ||\n            targetObj.corners.middleRight.x < sourceObj.corners.middleLeft.x) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottomCenter.y < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottomCenter.y < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.topCenter.y > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.topCenter.y > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.middleLeft.x &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.middleRight.x - targetObj.corners.middleLeft.x) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.middleRight.x < targetObj.corners.middleLeft.x &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.middleRight.x < targetObj.corners.middleLeft.x) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.topCenter.y - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottomCenter.y < target.corners.topCenter.y - target.margin.top)) {\n        if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            if ((tarPort !== undefined && source.corners.middleRight.x + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.middleRight.x + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.middleLeft.x > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.middleLeft.x > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.topCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.middleRight.x < target.corners.middleLeft.x) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (source.corners.containsPoint(top) || target.corners.containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottomCenter.y + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottomCenter.y + target.margin.bottom)) {\n        if (source.corners.topCenter.y > target.corners.bottomCenter.y) {\n            if ((tarPort !== undefined && source.corners.middleRight.x + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.middleRight.x + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.middleLeft.x > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.middleLeft.x > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottomCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.middleRight.x < target.corners.middleLeft.x) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.middleRight.x + margin < target.corners.middleLeft.x - margin ||\n        source.corners.middleLeft.x - margin > target.corners.middleRight.x + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottomCenter.y < target.corners.topCenter.y) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottomCenter.y + source.margin.bottom < target.corners.topCenter.y - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.middleRight.x + source.margin.right < target.corners.middleLeft.x - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.middleLeft.x - source.margin.left > target.corners.middleRight.x + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.middleLeft.x - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.middleRight.x < target.corners.middleLeft.x) {\n            if ((tarPort !== undefined && source.corners.bottomCenter.y + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottomCenter.y + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.topCenter.y > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.topCenter.y > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottomCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottomCenter.y < target.corners.bottomCenter.y) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.middleLeft.x - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.middleLeft.x - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.middleRight.x + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.middleRight.x + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.middleLeft.x > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.middleLeft.x > target.corners.middleLeft.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.middleRight.x < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.middleRight.x < target.corners.middleRight.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.topCenter.y > target.corners.bottomCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.topCenter.y - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottomCenter.y < target.corners.topCenter.y - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.topCenter.y - target.margin.top))) {\n        if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            if ((tarPort !== undefined && source.corners.middleLeft.x - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.middleLeft.x - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.middleRight.x < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.middleRight.x < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.middleLeft.x - target.corners.middleRight.x) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.topCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (source.corners.containsPoint(top) || target.corners.containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.middleLeft.x > target.corners.middleRight.x) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.middleLeft.x < target.corners.middleLeft.x) {\n        if ((targetPort !== undefined && source.corners.bottomCenter.y + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottomCenter.y + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.topCenter.y - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.topCenter.y - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.middleRight.x < target.corners.middleLeft.x ||\n            target.corners.middleRight.x < source.corners.middleLeft.x) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.topCenter.y - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.topCenter.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottomCenter.y + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottomCenter.y + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.middleLeft.x > target.corners.middleRight.x) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.topCenter.y < target.corners.topCenter.y) {\n        if ((targetPort !== undefined && source.corners.middleLeft.x > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.middleLeft.x > target.corners.middleLeft.x)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.middleRight.x < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.middleRight.x < target.corners.middleRight.x)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.middleRight.x) ||\n        (srcPort === undefined && source.corners.middleLeft.x > target.corners.middleRight.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.middleLeft.x) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.middleLeft.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.topCenter.y > target.corners.bottomCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    if (tar !== undefined) {\n        if (tarPort === undefined) {\n            var refPoint = findEndPoint(target.direction, target.point, tar);\n            target.point = getIntersection(element, tar, target.point, refPoint, true);\n        }\n    }\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > srcCorner.middleLeft.x) {\n                extra = (source.point.x - srcCorner.middleLeft.x) > extra ? ((source.point.x - srcCorner.middleLeft.x) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < srcCorner.middleRight.x) {\n                extra = (srcCorner.middleRight.x - source.point.x) > extra ? ((srcCorner.middleRight.x - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > srcCorner.topCenter.y) {\n                extra = (source.point.y - srcCorner.topCenter.y) > extra ? ((source.point.y - srcCorner.topCenter.y) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < srcCorner.bottomCenter.y) {\n                extra = (srcCorner.bottomCenter.y - source.point.y) > extra ? ((srcCorner.bottomCenter.y - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.middleLeft.x - source.margin.left;\n    var sRight = source.corners.middleRight.x + source.margin.right;\n    var sBottom = source.corners.bottomCenter.y + source.margin.bottom;\n    var sTop = source.corners.topCenter.y - source.margin.top;\n    var tLeft = target.corners.middleLeft.x - target.margin.left;\n    var tRight = target.corners.middleRight.x + target.margin.right;\n    var tBottom = target.corners.bottomCenter.y + target.margin.bottom;\n    var tTop = target.corners.topCenter.y - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.middleLeft.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.topCenter.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.middleRight.x - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottomCenter.y - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix } from '../primitives/matrix';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the Bpmn flows\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription) {\n        annotation.id = annotation.id || randomId();\n        var textele = new TextElement();\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        if (bounds.width !== undefined) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.content = annotation.content;\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        textele.style.textOverflow = 'Wrap';\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        annotation.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        textElement.refreshTextElement();\n        textElement.width = (annotation.width || bounds.width) - textElement.margin.left - textElement.margin.right;\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    return node.constraints & NodeConstraints.Rotate;\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { X1: start.x, X2: end.x, Y1: start.y, Y2: end.y };\n            var segment2 = { X1: reference.x, X2: intersectinPt.x, Y1: reference.y, Y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.Y2 - l2.Y1) * (l1.X2 - l1.X1) - (l2.X2 - l2.X1) * (l1.Y2 - l1.Y1);\n    var na = (l2.X2 - l2.X1) * (l1.Y1 - l2.Y1) - (l2.Y2 - l2.Y1) * (l1.X1 - l2.X1);\n    var nb = (l1.X2 - l1.X1) * (l1.Y1 - l2.Y1) - (l1.Y2 - l1.Y1) * (l1.X1 - l2.X1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.X1 + (ua * (l1.X2 - l1.X1));\n        point.y = l1.Y1 + (ua * (l1.Y2 - l1.Y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    var X1 = corners.topLeft;\n    var X2 = corners.topRight;\n    var Y1 = corners.bottomRight;\n    var Y2 = corners.bottomLeft;\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        X1 = transformPointByMatrix(matrix, X1);\n        X2 = transformPointByMatrix(matrix, X2);\n        Y1 = transformPointByMatrix(matrix, Y1);\n        Y2 = transformPointByMatrix(matrix, Y2);\n    }\n    line.push(X1);\n    line.push(X2);\n    line.push(Y1);\n    line.push(Y2);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.outerBounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    var selectedNodes = getCollection(dataObj.selectedItems.nodes, diagram.nodes);\n    var selcectedConnectors = getCollection(dataObj.selectedItems.connectors, diagram.connectors);\n    var selectedItems = [];\n    selectedItems = selectedItems.concat(selectedNodes).concat(selcectedConnectors);\n    diagram.select(selectedItems);\n    return dataObj;\n}\nfunction getCollection(objNodes, diagramNodes) {\n    var collection = [];\n    for (var i = 0; i < objNodes.length; i++) {\n        for (var _i = 0, diagramNodes_1 = diagramNodes; _i < diagramNodes_1.length; _i++) {\n            var connectors = diagramNodes_1[_i];\n            if (connectors.id === objNodes[i].id) {\n                collection.push(connectors);\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement();\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement();\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = document.getElementById(actualObject.wrapper.children[0].id + '_groupElement');\n            if (newValues.shape.content !== undefined && nativeElement) {\n                nativeElement.removeChild(nativeElement.children[0]);\n                actualObject.wrapper.children[0].content = newValues.shape.content;\n                nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = document.getElementById(actualObject.wrapper.children[0].id + '_html_element');\n            if (htmlElement) {\n                htmlElement.removeChild(htmlElement.children[0]);\n                actualObject.wrapper.children[0].content = newValues.shape.content;\n                htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints) {\n    if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\nexport function findPortIndex(node, id) {\n    var index;\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        var handle = diagram.selectedItems;\n        if (hasSingleConnection(diagram)) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = { x: x + element.actualSize.width / 2, y: y - 30 / diagram.scroller.currentZoom };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            if ((canShowCorner(handle.constraints, 'Rotate')) && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                return 'Rotate';\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false)) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var node = diagram.selectedItems.nodes[0];\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer'\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n        }\n        content.style.strokeDashArray = '2 2 6 2';\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        if (node.shape.activity.subProcess) {\n            var subProcess = node.shape.activity.subProcess;\n            var eventLength = subProcess.events.length;\n            var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n            var elementWrapper = node.wrapper.children[0].children[0];\n            if (subProcess.adhoc === false) {\n                elementWrapper.children[3 + index + eventLength].visible = false;\n            }\n            if (subProcess.compensation === false) {\n                elementWrapper.children[4 + index + eventLength].visible = false;\n            }\n            if (eventLength > 0) {\n                for (var i = 0; i < eventLength; i++) {\n                    this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    diagram.remove(diagram.nameTable[edges[i]]);\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes && !subProcess.collapsed) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        if (node.width !== undefined && node.height !== undefined) {\n            bounds = new Rect(node.offsetX - node.width / 2, node.offsetY - node.height / 2, node.width, node.height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~ConnectorConstraints.DragTargetEnd,\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                X1: parentBounds.right, Y1: parentBounds.top,\n                X2: parentBounds.right, Y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                X1: parentBounds.left, Y1: parentBounds.top,\n                X2: parentBounds.left, Y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                X1: parentBounds.right, Y1: parentBounds.bottom,\n                X2: parentBounds.left, Y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                X1: parentBounds.right, Y1: parentBounds.top,\n                X2: parentBounds.left, Y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.findInteractableObject = function (obj, diagram) {\n        if (obj.targetID) {\n            var targetNode = diagram.nameTable[obj.targetID];\n            if (targetNode.shape.type === 'Bpmn' && targetNode.shape.shape === 'TextAnnotation') {\n                return targetNode;\n            }\n        }\n        return obj;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.canAdd = function (obj) {\n        if (obj.shape && obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation') {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        if (bpmnShape.event.trigger) {\n            elementWrapper.height = elementWrapper.height * 0.8;\n        }\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = document.createElement('canvas');\n        canvasObj.setAttribute('id', id);\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.drawImage = function (canvas, obj) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX = obj.x + obj.width * obj.pivotX;\n            var pivotY = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            imageObj.onload = function () {\n                ctx_1.rotate(obj.angle * Math.PI / 180);\n                var image = new Image();\n                image.src = obj.source;\n                _this.image(ctx_1, image, obj.x, obj.y, obj.width, obj.height, obj);\n                ctx_1.rotate(-(obj.angle * Math.PI / 180));\n            };\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = document.createElement('canvas');\n                canvas1.setAttribute('width', width.toString());\n                canvas1.setAttribute('height', height.toString());\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + (element.corners.x) + 'px; top:' + ((element.corners.y)) + 'px;' +\n            'position:absolute;transform:rotate(' + element.parentTransform + 'deg);' +\n            'pointer-events:all;visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 0;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Default - Enables/Disables Default constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * continuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * @private\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds, randomId } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Gets/Sets the corners of the rectangular bounds\n         */\n        this.corners = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        this.isRectElement = false;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        this.float = false;\n        this.floatingBounds = undefined;\n        this.id = randomId();\n    }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        //Private variables\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        get: function () {\n            return this.pathData;\n        },\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        get: function () {\n            return this.imageSource;\n        },\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'white', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        get: function () {\n            return this.textContent;\n        },\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        get: function () {\n            return this.textNodes;\n        },\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        get: function () {\n            return this.textWrapBounds;\n        },\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the stop of gradient\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Defines the gradient of styles\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * Defines the radial gradient of styles\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement() {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the native element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    if (child.rotateAngle !== 0) {\n                        childSize = rotateSize(childSize, child.rotateAngle);\n                    }\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                child.arrange(child.desiredSize);\n                this.outerBounds.uniteRect(child.outerBounds);\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width + child.margin.right;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height + child.margin.bottom;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotation\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShape\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the behavior of selector\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the behavior of the selected objects\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.nodes || this.connectors) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                var node = diagram.nameTable[this.nodes[i].id];\n                var wrapper = node.wrapper;\n                // this.width = wrapper.actualSize.width; \n                // this.height = wrapper.actualSize.height;\n                // this.rotateAngle = wrapper.rotateAngle;\n                // this.offsetX = wrapper.offsetX;\n                // this.offsetY = wrapper.offsetY;\n                container.children.push(wrapper);\n            }\n            for (var j = 0; j < this.connectors.length; j++) {\n                var connector = diagram.nameTable[this.connectors[j].id];\n                var wrapper = connector.wrapper;\n                // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                // this.offsetY = wrapper.offsetY;\n                container.children.push(wrapper);\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement() {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content = new DiagramElement();\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement();\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement();\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if (this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = this.children ? new Container() : new Canvas();\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent = new TextElement();\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        var style = annotation.style;\n        var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n        annotationcontent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n            bold: style.bold, textWrapping: style.textWrapping,\n            color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n            fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n            textDecoration: link ? link.textDecoration || annotationcontent.hyperlink.textDecoration : style.textDecoration,\n        };\n        annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n        annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n        annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n        annotationcontent.content = link ? link.content || annotationcontent.hyperlink.link : annotation.content;\n        if (this.width !== undefined) {\n            annotationcontent.width = this.width - annotation.margin.left - annotation.margin.right;\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement();\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.offset = 0;\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = document.createElement('div');\n            div.setAttribute('id', this.element.id + '_ruler_space');\n            div.style.height = rulerGeometry.height + 'px';\n            div.style.width = rulerGeometry.width + 'px';\n            div.style.cssFloat = 'left';\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { getDiagramLayer, getExpandCollapseLayer, getPortsLayer, getNativeLayer } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        this.renderer = null;\n        this.isSvgMode = true;\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) {\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                canvas.appendChild(gElement);\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (nodeWidth >= 40 && nodeHeight >= 40) {\n            //Hide corners when the size is less than 40\n            if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n            }\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeWest) {\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeEast) {\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n        }\n    };\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            defs.appendChild(pattern);\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = '';\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform);\n        }\n    };\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg);\n    };\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true);\n            }\n        }\n    };\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        //diagram layer\n        if (svgMode) {\n            var diagramLayer = getDiagramLayer(this.diagramId);\n            diagramLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n        }\n        //background\n        //gridline\n        var gridLayer = getGridLayer(this.diagramId);\n        gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n            + (transform.ty * transform.scale) + ')');\n        //portslayer    \n        var portsLayer = getPortsLayer(this.diagramId);\n        portsLayer.setAttribute('transform', 'translate('\n            + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n            + transform.scale + ')');\n        //expandlayer\n        var expandLayer = getExpandCollapseLayer(this.diagramId);\n        expandLayer.setAttribute('transform', 'translate('\n            + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n            + transform.scale + ')');\n        //nativelayer\n        var nativeLayer = getNativeLayer(this.diagramId);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n            + transform.scale + ')');\n        //htmlLayer\n        var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n        htmlLayer.style.transform = 'translate('\n            + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n            + transform.scale + ')';\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the BackgroundImage of diagram\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines PageSettings\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Defines gridlines\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the public properties of diagram\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * defines the Properties for the Diagram Ruler\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines rulers\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd');\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd');\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd');\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && canOutConnect(args.target))\n                    || (this.endPoint === 'ConnectorTargetEnd' && canInConnect(args.target)))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    this.commandHandler.connect(this.endPoint, args);\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                var redoObject = { nodes: [], connectors: [] };\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            if (obj.offsetX !== this.undoElement.offsetX || obj.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            if (args.source instanceof Node) {\n                if (args.source.offsetX === this.undoElement.nodes[0].offsetX &&\n                    args.source.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(args.source.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(args.source.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (args.source.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                args.source.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (args.source) {\n            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n        }\n        var arg = {\n            source: args.source, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (args.source) {\n                oldValues_1 = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                newValues = {\n                    offsetX: args.source.wrapper.offsetX + snappedPoint.x,\n                    offsetY: args.source.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: args.source, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drawHighlighter(this.currentTarget);\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    RotateTool.prototype.mouseUp = function (args) {\n        if (this.undoElement.rotateAngle !== args.source.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.rotateAngle === args.source.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: this.currentElement.wrapper.offsetX, y: this.currentElement.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - this.currentElement.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        if (this.undoElement.offsetX !== args.source.wrapper.offsetX || this.undoElement.offsetY !== args.source.wrapper.offsetY) {\n            this.blocked = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.offsetX === args.source.wrapper.offsetX && this.undoElement.offsetY === args.source.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        this.blocked = !(this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getPivot = function () {\n        switch (this.corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    ResizeTool.prototype.updateSize = function (shape, startPoint, endPoint, corner) {\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -shape.rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var initialBounds = this.initialBounds;\n        var diff;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) : difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / shape.width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / shape.width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / shape.height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, diff.x, diff.y, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / shape.height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / shape.width;\n                deltaHeight = (initialBounds.height - dify) / shape.height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                deltaWidth = (initialBounds.width - difx) / shape.width;\n                deltaHeight = (initialBounds.height - dify) / shape.height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                deltaHeight = (initialBounds.height + dify) / shape.height;\n                deltaWidth = (initialBounds.width + difx) / shape.width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / shape.width;\n                deltaHeight = (initialBounds.height + dify) / shape.height;\n                break;\n        }\n        return this.scaleObjects(matrix, deltaWidth, deltaHeight, corner, startPoint, endPoint, shape);\n    };\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (matrix, deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot());\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot());\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { X1: line1Start.x, Y1: line1Start.y, X2: line1End.x, Y2: line1End.y };\n            var line2 = { X1: line2Start.x, Y1: line2Start.y, X2: line2End.x, Y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction } from '../utility/base-util';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (this.tool instanceof PolygonDrawingTool && (evt.button === 2 || evt.buttons === 2)) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs, arg);\n            }\n            else if ((this.inAction === true) && this.isMouseDown === true && this.tool instanceof PolygonDrawingTool) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                this.diagram.endEdit();\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n                        this.initialEventArgs.source && this.action === 'Select') {\n                        if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                            this.eventArgs.source instanceof Selector) {\n                            this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                        }\n                        if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                            !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                                contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                            this.action = 'Drag';\n                        }\n                        this.tool = this.getTool(this.action);\n                        this.tool.mouseDown(this.initialEventArgs);\n                    }\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        touches = evt.touches;\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool) && evt.detail === 2))) {\n                this.diagram.endEdit();\n                document.getElementById(this.diagram.element.id + 'content').focus();\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        //end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.endEdit();\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && this.tool instanceof PolygonDrawingTool) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === \"nudgeRight\" || i === \"nudgeDown\" || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right > this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            this.eventArgs.position = { x: this.tool.prevPosition.x, y: this.tool.prevPosition.y };\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            switch (position) {\n                case 'right':\n                    this.eventArgs.position.x += 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    this.eventArgs.position.x -= 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    this.eventArgs.position.y += 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    this.eventArgs.position.y -= 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            arg.element = this.lastObjectUnderMouse;\n            arg.targets = arg.actualObject = undefined;\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && this.tool instanceof PolygonDrawingTool) {\n                    var arg_1 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs, arg_1);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width > textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            width = textBounds.width;\n            width = (minWidth > width) ? minWidth : width;\n            height = (minHeight > textBounds.height) ? minHeight : textBounds.height;\n            transforms = this.diagram.scroller.transform;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) || getObjectFromCollection(this.diagram.connectors, node.id)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action === 'Rotate' || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        return getCursor(action, this.diagram.selectedItems.rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        matrix = identityMatrix();\n                        rotateMatrix(matrix, -(container.rotateAngle + container.parentTransform), obj.offsetX, obj.offsetY);\n                        point = transformPointByMatrix(matrix, pt);\n                        bounds = container.corners;\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            bounds.uniteRect(child.corners);\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : bounds.containsPoint(point)) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element) {\n                                    if (obj instanceof Connector && diagram.bpmnModule) {\n                                        obj = diagram.bpmnModule.findInteractableObject(obj, diagram);\n                                    }\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canOutConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canInConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (actualTarget.parentId) {\n                    var obj = actualTarget;\n                    var selected = isSelected(diagram, obj);\n                    while (obj) {\n                        if (isSelected(diagram, obj) && !selected) {\n                            break;\n                        }\n                        actualTarget = obj;\n                        obj = diagram.nameTable[obj.parentId];\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the BackgroundImage of diagram\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, rotatePoint } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findPortIndex } from './../utility/diagram-util';\nimport { randomId } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection } from './../utility/connector';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        this.clipboardData = {};\n        this.connectorsTable = [];\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) {\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd');\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd');\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = clone((selectedItems[j]));\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    this.diagram.remove(item);\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '' }, { targetID: newConnector.targetID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '' }, { sourceID: newConnector.sourceID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = [];\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else {\n            this.translateObject(cloneObject);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        children = children.concat(obj.children);\n        if (this.clipboardData.childTable) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = this.clipboardData.childTable[children[i]];\n                if (childObj) {\n                    var newObj = void 0;\n                    if (getObjectType(childObj) === Connector) {\n                        newObj = this.cloneConnector(childObj, multiSelect);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect);\n                    }\n                    newChildren.push(newObj.id);\n                }\n            }\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj) {\n        obj.id += randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement');\n        var backNode = getDiagramElement(nodeId + '_groupElement');\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement');\n                element.parentNode.removeChild(element);\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                }\n                this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n            else if (target && (connector.sourceID !== target.id || connector.sourcePortID === '') &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, target.wrapper.corners, target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, pivot, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n            }\n            else {\n                this.scaleObject(sw, sh, pivot, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent) {\n        var temp = node;\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (!node.children) {\n                nodes.push(node);\n            }\n            else {\n                if (includeParent) {\n                    nodes.push(node);\n                }\n                nodes = this.getAllDescendants(node, nodes);\n            }\n        }\n        return nodes;\n    };\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n            var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n            var refPoint = { x: x + refWrapper.actualSize.width * pivot.x, y: y + refWrapper.actualSize.height * pivot.y };\n            refPoint = rotatePoint(refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, refPoint);\n            rotateMatrix(matrix, -refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        width: node.width, height: node.height, offsetX: node.offsetX,\n                        offsetY: node.offsetY, margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                    });\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        var index = findPortIndex(obj, port.id);\n        var ports = {};\n        ports[index] = { offset: { x: port.offset.x, y: port.offset.y } };\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = { ports: ports };\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            ports = {};\n            ports[index] = { offset: { x: port.offset.x, y: port.offset.y } };\n            changedvalues = { ports: ports };\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        this.expandNode(node, false, this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, propChange, diagram) {\n        var animation;\n        var objects;\n        var expand = propChange ? node.isExpanded : !node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (!propChange) {\n            this.diagram.updateIcon(node);\n        }\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (target.isExpanded) {\n                this.expandCollapse(target, visibility, diagram);\n            }\n            var oldValues = {\n                visible: target.visible\n            };\n            target.visible = visibility;\n            var newValues = {\n                visible: target.visible\n            };\n            diagram.nodePropertyChange(target, oldValues, newValues);\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                if (option === 'Left') {\n                    if (objects[i] instanceof Node) {\n                        tx = bounds.topLeft.x +\n                            objects[i].width / 2 - objects[i].offsetX;\n                    }\n                    else {\n                        tx = bounds.topLeft.x - objects[i].sourcePoint.x;\n                    }\n                }\n                else if (option === 'Right') {\n                    if (objects[i] instanceof Node) {\n                        tx = bounds.topRight.x -\n                            objects[i].width / 2 - objects[i].offsetX;\n                    }\n                    else {\n                        tx = bounds.topRight.x - objects[i].wrapper.bounds.width -\n                            objects[i].sourcePoint.x;\n                    }\n                }\n                else if (option === 'Top') {\n                    if (objects[i] instanceof Node) {\n                        ty = bounds.top + objects[i].height / 2 - objects[i].offsetY;\n                    }\n                    else {\n                        ty = bounds.top - objects[i].sourcePoint.y;\n                    }\n                }\n                else if (option === 'Bottom') {\n                    if (objects[i] instanceof Node) {\n                        ty = bounds.bottom - objects[i].height / 2 - objects[i].offsetY;\n                    }\n                    else {\n                        ty = bounds.bottom - objects[i].sourcePoint.y;\n                    }\n                }\n                else if (option === 'Center') {\n                    if (objects[i] instanceof Node) {\n                        tx = bounds.center.x - objects[i].offsetX;\n                    }\n                    else {\n                        j = Math.abs(bounds.width -\n                            objects[i].wrapper.bounds.width);\n                        tx = bounds.bottomLeft.x - j / 2 - objects[i].sourcePoint.x;\n                    }\n                }\n                else if (option === 'Middle') {\n                    if (objects[i] instanceof Node) {\n                        ty = bounds.center.y - objects[i].offsetY;\n                    }\n                    else {\n                        ty = bounds.center.y - objects[i].sourcePoint.y;\n                    }\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n        if (this.scrolled) {\n            this.diagram.endEdit();\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = quad.objects.indexOf(node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines keyboard commands\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canResize, canSingleSelect, canZoomPan } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\n/**\n * Diagram control\n * ```\n * <div id='diagram'/>\n * <script>\n *   var diagramObj = new Diagram({ width:'1000px', height:'500px' });\n *   diagramObj.appendTo('#diagram');\n * </script>\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        _this.renderTimer = null;\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        /**\n         * Used to end the context menu rendering\n         */\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        this.initCommands();\n        this.isLoading = false;\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        this.drag(obj, tx, ty);\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option);\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            if (this.bpmnModule) {\n                if (!this.bpmnModule.canAdd(obj)) {\n                    return null;\n                }\n            }\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            this.triggerEvent(DiagramEvent.collectionChange, args);\n            var activeLayer = void 0;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    //  newObj.processId = (obj as Node).processId;\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement');\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement');\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement');\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0) {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement');\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement');\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                if (this.bpmnModule) {\n                    if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                        this.refreshCanvasLayers();\n                        return;\n                    }\n                }\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                parentNode.children.push(id);\n                parentNode.wrapper.children.push(this.nameTable[id].wrapper);\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            var transform = this.scroller.transform;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.createElement('div');\n                    var textarea = document.createElement('textarea');\n                    textEditing.appendChild(textarea);\n                    text = textWrapper.content;\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    bounds.width = Math.max(bounds.width, 50);\n                    x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - bounds.width / 2) - 2.5);\n                    y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - bounds.height / 2) - 3);\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv',\n                        'style': 'position: absolute' + ';left:' + x + 'px;top:' + y + 'px;width:' + (bounds.width + 1) +\n                            'px;height:' + bounds.height + 'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox',\n                        'style': 'width:' + (bounds.width + 1) + 'px;height:' + bounds.height +\n                            'px;resize: none;outline: none;overflow: hidden;' +\n                            'font-family:' + style.fontFamily + ';font-size:' + style.fontSize + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';',\n                        'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textarea, attributes);\n                    textarea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textarea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textarea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    textarea.appendChild(document.createTextNode(text));\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    this.diagramCanvas.appendChild(textEditing);\n                    EventHandler.add(textarea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                    EventHandler.add(textarea, 'focusout', this.focusOutEdit, this);\n                    textarea.focus();\n                    textarea.select();\n                }\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                this.updateIcon(node);\n                this.updateDefaultLayoutIcons(node);\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            this.refreshDiagramLayer();\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            var canvas = obj.wrapper;\n            canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            for (var i = 0; i < obj.wrapper.children.length; i++) {\n                var canvas = obj.wrapper.children[i];\n                if (canvas instanceof TextElement) {\n                    if (canvas.id.match('_' + labels[j].id + '$')) {\n                        for (var k = 0; k < obj.annotations.length; k++) {\n                            if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                                if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                    var entry = {\n                                        type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                        redoObject: cloneObject(obj), category: 'Internal'\n                                    };\n                                    this.addHistoryEntry(entry);\n                                }\n                                obj.annotations.splice(k, 1);\n                            }\n                        }\n                        obj.wrapper.children.splice(i, 1);\n                        if (this.mode === 'SVG') {\n                            var element = getDiagramElement(canvas.id);\n                            if (element) {\n                                var element_1 = getDiagramElement(canvas.id);\n                                element_1.parentNode.removeChild(element_1);\n                            }\n                            var textElement = getDiagramElement(canvas.id + '_text');\n                            if (textElement) {\n                                element = getDiagramElement(canvas.id + '_text');\n                                element.parentNode.removeChild(element);\n                            }\n                        }\n                        else {\n                            this.refreshCanvasLayers();\n                        }\n                    }\n                }\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = 0; j < ports.length; j++) {\n            for (var i = 0; i < obj.wrapper.children.length; i++) {\n                var canvas = obj.wrapper.children[i];\n                if (canvas instanceof PathElement) {\n                    if (canvas.id.match('_' + ports[j].id + '$')) {\n                        for (var k = 0; k < obj.ports.length; k++) {\n                            if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                                if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                    var entry = {\n                                        type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                        redoObject: cloneObject(obj), category: 'Internal'\n                                    };\n                                    this.addHistoryEntry(entry);\n                                }\n                                obj.ports.splice(k, 1);\n                            }\n                        }\n                        obj.wrapper.children.splice(i, 1);\n                        if (this.mode === 'SVG') {\n                            var element = getDiagramElement(canvas.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        else {\n                            this.refreshCanvasLayers();\n                        }\n                    }\n                }\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes;\n        this.diagramLayerDiv = document.createElement('div');\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        setAttributeHtml(this.diagramLayerDiv, attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n    };\n    Diagram.prototype.initData = function () {\n        if (this.dataBindingModule) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    var getDefaults = getFunction(this.getNodeDefaults);\n                    if (getDefaults) {\n                        var defaults = getDefaults(obj, this);\n                        if (defaults && defaults !== obj) {\n                            extendObject(defaults, obj);\n                        }\n                    }\n                    this.initNode(obj);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            if (independentObj) {\n                var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n                if (!checkBoundaryConstraints) {\n                    var node = obj instanceof Node ? this.nodes : this.connectors;\n                    for (var i = 0; i <= node.length; i++) {\n                        if (node[i] && obj.id === node[i].id) {\n                            node.splice(i, 1);\n                        }\n                    }\n                }\n                layer.zIndexTable[obj.zIndex] = obj.id;\n            }\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                this.updateGroupOffset(obj);\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    node.parentId = obj.id;\n                }\n                if (!this.isLoading && obj.rotateAngle) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node) {\n        if ((node.children && node.children.length > 0) || (node.processId)) {\n            this.nameTable[node.id].offsetX = node.wrapper.offsetX;\n            this.nameTable[node.id].offsetY = node.wrapper.offsetY;\n            if ((node.children && node.children.length > 0)) {\n                this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                this.nameTable[node.id].height = node.wrapper.actualSize.height;\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            for (var i = 0; i < obj.children.length; i++) {\n                if (this.nameTable[obj.children[i]]) {\n                    canvas.children.push(this.nameTable[obj.children[i]].wrapper);\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            portContainer.children = [];\n            canvas.children.push(portContainer);\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container);\n        canvas.measure(new Size(obj.width, obj.height));\n        canvas.arrange(canvas.desiredSize);\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var htmlLayer = getHTMLLayer(this.element.id);\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers();\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.views[temp];\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if (!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var container = document.getElementById(view.element.id);\n        var bounds = container.getBoundingClientRect();\n        var node;\n        var element;\n        var connector;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            element = this.basicElements[i];\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n        }\n        this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform) {\n        if (transform === void 0) { transform = true; }\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            for (var _b = 0, _c = Object.keys(layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var element = this.nameTable[layer.zIndexTable[node]].wrapper;\n                if (!(this.nameTable[layer.zIndexTable[node]].parentId)\n                    && !(this.nameTable[layer.zIndexTable[node]].processId)) {\n                    renderer.renderElement(element, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? this.scroller.transform : undefined);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                var pathSegment = canvas.children[0];\n                var data = pathSegment.data;\n                connector.getSegmentElement(connector, pathSegment);\n                if (pathSegment.data !== data) {\n                    canvas.measure(new Size());\n                    canvas.arrange(canvas.desiredSize);\n                    if (this.mode === 'SVG' && !isLoad) {\n                        this.updateDiagramObject(connector);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width;\n        height = view.contentHeight || view.diagramLayer.height;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            diagramLayer.setAttribute('width', (factor * width).toString());\n            diagramLayer.setAttribute('height', (factor * height).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n            this.updateSelector();\n            this.renderPageBreaks(bounds);\n        }\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n            this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]));\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                if (this.selectedItems.constraints & SelectorConstraints.UserHandle) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]));\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_1 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_1.children) {\n                        for (var _i = 0, _a = parent_1.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit(true);\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function (focusOut) {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textarea = document.getElementById(this.element.id + '_editBox');\n            var text = textarea.value;\n            EventHandler.remove(textarea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textarea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n            this.updateSelector();\n            update = true;\n        }\n        return update;\n    };\n    Diagram.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.commandHandler.isSelected(this.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.commandHandler.isSelected(this.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1 && segmentChange) {\n                        switch (connector.segments[0].direction) {\n                            case 'Bottom':\n                                tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                break;\n                            case 'Top':\n                                tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                break;\n                            case 'Left':\n                                tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                break;\n                            case 'Right':\n                                tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                break;\n                        }\n                        this.commandHandler.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined && !actualObject.children) {\n            actualObject.wrapper.children[0].width = node.width;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.height !== undefined && !actualObject.children) {\n            actualObject.wrapper.children[0].height = node.height;\n            update = true;\n            updateConnector = true;\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, true, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (!isLayout) {\n                this.connectorSegmentChange(actualObject, existingInnerBounds);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (this.mode === 'SVG') {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                var connector = this.nameTable[actualObject.inEdges[j]];\n                var conn = {\n                    sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                    targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n                };\n                this.connectorPropertyChange(connector, {}, conn);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                var connection = this.nameTable[actualObject.outEdges[k]];\n                var conn = {\n                    sourcePoint: connection.sourcePoint, targetPoint: connection.targetPoint, sourceID: connection.sourceID,\n                    targetID: connection.targetID, sourcePortID: connection.sourcePortID, targetPortID: connection.targetPortID\n                };\n                this.connectorPropertyChange(connection, {}, conn);\n            }\n        }\n        if (actualObject.parentId) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, newProp, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || canOutConnect(sourceNode)) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                if (!targetNode || canInConnect(targetNode)) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        }\n        //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'SVG') {\n            this.updateDiagramObject(actualObject);\n        }\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            this.updateDiagramObject(this.nameTable[element.id]);\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (canUpdateSize) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                changedObject.offset !== undefined) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width)\n                    - annotationWrapper.margin.left - annotationWrapper.margin.right;\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                annotationWrapper.constraints = changedObject.constraints;\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            if (changedObject.content !== undefined) {\n                if (annotationWrapper) {\n                    isMeasure = true;\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            annotationWrapper.refreshTextElement();\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    if (changedObject.shape === 'Custom' && changedObject.pathData) {\n                        portWrapper.data = String(changedObject.pathData);\n                        isMeasure = true;\n                    }\n                    else {\n                        var pathdata = getPortShape(changedObject.shape);\n                        portWrapper.data = pathdata;\n                    }\n                }\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content');\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect');\n                    var iconShape = getDiagramElement(icon.id + '_shape');\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element');\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode.parentId) {\n                this.updateGroupSize(tempNode);\n            }\n            else {\n                tempNode.wrapper.measure(new Size());\n                tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                this.updateGroupOffset(tempNode);\n                this.updateDiagramObject(tempNode);\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                newObj = newNode;\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            newObj.id += randomId();\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol, target: _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    _this.add(clonedObject);\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = document.createElement('a');\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    pom.setAttribute('download', fileName + '.' + fileType);\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var img_1 = document.createElement('img');\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            img_1.setAttribute('id', this.diagram.element.id + '_printImage');\n            setAttributeHtml(img_1, attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = document.createElement('a');\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                htmlElement_1.setAttribute('download', fileName + '.' + fileType);\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = document.createElement('div');\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var img = document.createElement('img');\n        var attr;\n        var innerDiv = document.createElement('div');\n        attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        setAttributeHtml(img, attr);\n        setAttributeHtml(innerDiv, attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var img = document.createElement('img');\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        setAttributeHtml(img, attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width;\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height;\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen } from '../enum/enum';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        var item = this.getKeyFromId(args.item.id);\n        switch (item) {\n            case 'cut':\n                this.parent.cut();\n                break;\n            case 'copy':\n                this.parent.copy();\n                break;\n            case 'undo':\n                this.parent.undo();\n                break;\n            case 'redo':\n                this.parent.redo();\n                break;\n            case 'paste':\n                this.parent.paste();\n                break;\n            case 'selectAll':\n                this.parent.selectAll();\n                break;\n            case 'group':\n                this.parent.group();\n                break;\n            case 'unGroup':\n                this.parent.unGroup();\n                break;\n            case 'bringToFrontOrder':\n                this.parent.bringToFront();\n                break;\n            case 'moveForwardOrder':\n                this.parent.moveForward();\n                break;\n            case 'sendToBackOrder':\n                this.parent.sendToBack();\n                break;\n            case 'sendBackwardOrder':\n                this.parent.sendBackward();\n                break;\n        }\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            this.contextMenu.hideItems(this.hiddenItems, true);\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = this.intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.intersect2 = function (start1, end1, start2, end2) {\n        var point = { x: 0, y: 0 };\n        var lineUtil1 = this.getLineSegment(start1.x, start1.y, end1.x, end1.y);\n        var lineUtil2 = this.getLineSegment(start2.x, start2.y, end2.x, end2.y);\n        var line3 = intersect3(lineUtil1, lineUtil2);\n        if (line3.enabled) {\n            return line3.intersectPt;\n        }\n        else {\n            return point;\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.getLineSegment = function (x1, y1, x2, y2) {\n        return { 'X1': Number(x1) || 0, 'Y1': Number(y1) || 0, 'X2': Number(x2) || 0, 'Y2': Number(y2) || 0 };\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { getAdornerLayerSvg } from './../utility/dom-util';\nimport { isSelected } from '../interaction/actions';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            getAdornerLayerSvg(this.diagram.element.id).appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds = getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: getAdornerLayerSvg(this.diagram.element.id).id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = getAdornerLayerSvg(this.diagram.element.id).getElementById('_SnappingLines');\n        var line = getAdornerLayerSvg(this.diagram.element.id).getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            getAdornerLayerSvg(this.diagram.element.id).appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.remove(obj);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else {\n                    diagram.add(obj);\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(this.protectChange);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            this.protectChange = false;\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            diagram.updateDiagramObject(source);\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && node.isExpanded) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        if (node.offsetX > target.offsetX) {\n            points.push(nodeBounds.bottomCenter, { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) }, {\n                x: (targetBounds.middleRight.x + layout.horizontalSpacing / 2),\n                y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4)\n            }, { x: (targetBounds.middleRight.x + layout.horizontalSpacing / 2), y: targetBounds.middleRight.y }, targetBounds.middleRight);\n        }\n        else {\n            points.push(nodeBounds.bottomCenter, { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) }, {\n                x: (targetBounds.middleLeft.x - layout.horizontalSpacing / 2),\n                y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4)\n            }, { x: (targetBounds.middleLeft.x - layout.horizontalSpacing / 2), y: targetBounds.middleLeft.y }, targetBounds.middleLeft);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.nestedBestRanks[j][cell.temp[0]] = cell;\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement } from '../diagram/utility/diagram-util';\nimport { getFunction } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * Defines the behavior of a palette\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * Defines the size and position of the symbol palette\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.symbolTable = {};\n        _this.info = 'info';\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss;\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.prepareSymbol(symbol);\n            this.symbolTable[symbol.id] = symbol;\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var paletteDiv = document.createElement('div');\n        paletteDiv.setAttribute('id', symbolGroup.id);\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        paletteDiv.setAttribute('style', style);\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                this.prepareSymbol(obj);\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            content = symbol.init(this);\n        }\n        var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n        var getSymbolInfo = getFunction(this.getSymbolInfo);\n        if (getSymbolInfo) {\n            symbolInfo = getSymbolInfo(symbol);\n        }\n        symbolInfo = symbolInfo || {};\n        //defining custom templates\n        content.relativeMode = 'Object';\n        content.horizontalAlignment = content.verticalAlignment = 'Center';\n        symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n        symbolContainer.children = [content];\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        width = symbolInfo.width = symbolInfo.width ||\n            (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n        height = symbolInfo.height = symbolInfo.height ||\n            (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n        if (width !== undefined && height !== undefined) {\n            var actualWidth = width;\n            var actualHeight = height;\n            if (this.symbolWidth !== undefined) {\n                actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n            }\n            else {\n                width += obj.style.strokeWidth;\n            }\n            if (this.symbolHeight !== undefined) {\n                actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n            }\n            else {\n                height += obj.style.strokeWidth;\n            }\n            if (symbolInfo.description && symbolInfo.description.text !== '') {\n                actualHeight -= 20; // default height of the text have been reduced from the container.\n            }\n            sw = actualWidth / (content.width || width);\n            sh = actualHeight / (content.height || height);\n            if (symbolInfo.fit) {\n                sw = actualWidth / symbolInfo.width;\n                sh = actualHeight / symbolInfo.height;\n            }\n            width = actualWidth;\n            height = actualHeight;\n            sw = sh = Math.min(sw, sh);\n            symbolContainer.width = width;\n            symbolContainer.height = height;\n            content.width = symbolInfo.width;\n            content.height = symbolInfo.height;\n            this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n        }\n        else {\n            var outerBounds = void 0;\n            if (symbol instanceof Connector) {\n                outerBounds = getOuterBounds(symbol);\n            }\n            content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n            content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n        }\n        symbol.wrapper = stackPanel;\n        stackPanel.children = [symbolContainer];\n        content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n        stackPanel.id = content.id + '_symbol';\n        stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n        stackPanel.offsetX = symbol.style.strokeWidth / 2;\n        stackPanel.offsetY = symbol.style.strokeWidth / 2;\n        //symbol description-textElement\n        this.getSymbolDescription(symbolInfo, width, stackPanel);\n        stackPanel.measure(new Size());\n        stackPanel.arrange(stackPanel.desiredSize);\n        symbolInfo.width = symbolInfo.width || content.actualSize.width;\n        symbolInfo.height = symbolInfo.height || content.actualSize.height;\n        symbol[this.info] = symbolInfo;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            this.getSymbolContainer(symbol, parentDiv);\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content);\n        var previewContainer = createElement('div');\n        var div;\n        previewContainer.setAttribute('draggable', 'true');\n        previewContainer.setAttribute('class', 'e-dragclone');\n        previewContainer.style.pointerEvents = 'none';\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n            previewContainer.appendChild(canvas);\n            style += 'transform:scale(0.5);';\n            canvas.setAttribute('transform-origin', '0 0');\n            canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n            this.diagramRenderer.renderElement(content, canvas, undefined);\n        }\n        ((div && symbol.shape.type === 'HTML') ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content) {\n        if (content.children) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createElement('div', {\n            id: symbol.id + '_container',\n            styles: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden'\n        });\n        container.setAttribute('title', symbolInfo.description ? symbolInfo.description.text : symbol.id);\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n            container.appendChild(canvas);\n            canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n            this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined);\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && symbol.shape.type === 'HTML') ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (symbol.id + '_preview') : symbol.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                evt.preventDefault();\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            if (id !== this.selectedSymbol.id) {\n                var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n                oldSymbol.classList.remove('e-symbol-selected');\n                var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                var event_1 = 'paletteSelectionChange';\n                this.trigger(event_1, args);\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            container.style.backgroundColor = '';\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n        }\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = document.createElement('input');\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = document.createElement('div');\n            emptyDiv.setAttribute('id', 'EmptyDiv');\n            emptyDiv.innerHTML = 'No Items To Display';\n            emptyDiv.setAttribute('style', 'textAlign:center;fontStyle:italic');\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = document.createElement('div');\n        paletteDiv.setAttribute('id', 'SearchPalette');\n        paletteDiv.setAttribute('style', 'display:none;overflow:auto;');\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control\n * ```\n * <div id='overview'/>\n * <script>\n *   var overview = new overview({ width:'250px', height:'500px', sourceID: 'diagram' });\n *   overview.appendTo('#overview');\n * </script>\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = document.createElement('div');\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = document.createElement('div');\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var div = document.createElement('div');\n        var attr = { 'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer' };\n        setAttributeHtml(div, attr);\n        var htmlLayer = div;\n        div.style.pointerEvents = 'none';\n        div.style.position = 'absolute';\n        div.style.left = '0px';\n        div.style.top = '0px';\n        var htmlDiv = document.createElement('div');\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        setAttributeHtml(htmlDiv, options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById('overview_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","l","s","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","randomId","chars","id","window","crypto","count","Uint16Array","msCrypto","getRandomValues","getBounds","element","Rect","top","actualSize","pivot","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","toBounds","rotateAngle","parentTransform","cloneObject","additionalProp","key","newObject","keys","sourceObject","properties","concat","Object","customProperties","propAdditional","getFunction","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","indexOf","HTMLElement","cloneNode","innerHtml","propName","sourceArray","clonedArray","extendObject","options","childObject","_a","extendeArray","extendArray","extendedObject","childArray","reset","textAlignToString","value","state","wordBreakToString","bBoxText","textContent","measureElement","style","visibility","text","children","setAttribute","fontSize","fontFamily","bold","bBox","getBBox","middleElement","j","overFlow","middle","bounds","temp","t","floor","substr","textOverflow","whiteSpaceToString","wrap","rotateSize","size","minX","min","minY","maxX","max","maxY","Size","rotatePoint","pivotX","pivotY","getOffset","desiredSize","getValue","findSegmentPoints","sample","sampleLength","pts","pathNode","setAttributeNS","pathData","child","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","measurePath","svgBounds","wrapSvgText","textValue","txtValue","bounds1","childNodes","k","content","whiteSpace","breakWord","dy","replace","ceil","words","newText","existingWidth","existingText","eachLine","split","wordWrapping","measureHtmlText","maxWidth","document","createElement","fontWeight","italic","fontStyle","toString","color","textWrapping","wordBreak","body","appendChild","offsetWidth","offsetHeight","removeChild","measureText","wrapBounds","fill","stroke","strokeColor","strokeWidth","dashArray","strokeDashArray","opacity","shadow","gradient","visible","description","textDecoration","doWrap","textAlign","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","diagramId","elementcoll","getDiagramElement","getElementsByClassName","getElementById","getAdornerLayerSvg","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","parentNode","getBackgroundLayer","getNativeLayer","getHTMLLayer","createHtmlElement","elementType","attribute","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","parent","hasClass","className","animVal","addTouchPointer","touchList","e","touches","length_1","pageX","clientX","pageY","clientY","pointerId","removeElement","elementId","contentId","div","querySelector","getContent","isHtml","item","compile","compiledString","svg","attributes","createMeasureElements","usageCount","divElement","styles","imageElement","createTextNode","tSpan","getBasicShape","shape","basicShapes","getPortShape","portShapes","getDecoratorShape","decorator","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","target","tarCorner","tarDir","port","tarPortPt","getDirection","topCenter","bottomCenter","abs","middleRight","middleLeft","equals","containsPoint","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","findEndPoint","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","transform","vector2","intermeditatePointsForStraight","removeSegment","getOppositeDirection","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","diffY","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","segLength","src","tar","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","X1","Y1","X2","Y2","createLineSegment","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","r","re","findLength","es","asin","PI","cor","isTar","segmentPoints","wrapper","constValue","angle_2","angle_3","PathElement","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","outerBounds","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","bezierPoints","canSelect","Connector","constraints","ConnectorConstraints","Select","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canOutConnect","OutConnect","canResize","returnValue","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","DiagramConstraints","UserInteraction","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","PortConstraints","Draw","canDrag","renderRuler","isHorizontal","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","completeRegion","region","selectedObjects","containsRect","findObjectType","drawingObject","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","rect","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","index","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","name","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","connectors","mode","nodes","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","selectedNodes","getCollection","selectedItems","selcectedConnectors","select","objNodes","diagramNodes","diagramNodes_1","updateStyle","changedObject","textElement","StrokeStyle","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","actualObject","minHeight","maxHeight","minWidth","horizontalAlignment","verticalAlignment","Text","updateShape","oldObject","DiagramElement","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","htmlElement","flowshapedata","basicShapeData","removeItem","array","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","action","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","findAnnotation","annotationId","annotations","findPortIndex","ports","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","insertObject","low","high","mid","findToolToActivate","touchStart","touchMove","currentSymbol","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","forty","checkForResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","nameTable","parentId","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","CanvasRenderer","getContext","canvas","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","translate","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","drawImage","_this","ctx_1","imageObj","Image","onload","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","m","acos","labelX","labelY","pointx","pointy","SvgRenderer","parentSvg","shadowElement","tX","tY","attr","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","class","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","stroke-width","drawCircle","enableSelector","circle","classval","radius","random","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","slice","preserveAspectRatio","drawHTMLContent","template","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentSize","contentHeight","templatePosition","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","SnapConstraints","AnnotationConstraints","Transform","RenderMode","KeyModifiers","Keys","DiagramEvent","contextMenuClick","isDirt","Self","Parent","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","measure","availableSize","validateDesiredSize","arrange","updateBounds","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","imageSource","stretch","measureImage","textNodes","textWrapBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","nativeSVG","measureNativeContent","getAvailableSize","measureNativeSvg","Canvas","leftMargin","topMargin","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","ShapeAnnotation","PathAnnotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","bridges","init","bpmnElement","container","getSegmentElement","getConnectorPoints","flow","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","pathseqData","pathseq","findPath","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","Default","CollectionFactory","UserHandle","All","getShapeType","BasicShape","FlowShape","Path","BpmnShape","Native","Html","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","processId","outEdges","inEdges","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","initContainer","borderColor","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","initAnnotationWrapper","portContent","pathdata","label","annotationcontent","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","cssFloat","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","trans","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","lastChild","isRightOrBottom","tickAlignment","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getObjectType","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","htmlLayer","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","w","h","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","grid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","diagramElement","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getDiagramLayer","getGridLayer","getPortsLayer","getExpandCollapseLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","ToolBase","protectChange","commandHandler","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","info","ctrlKey","clickCount","unSelect","selectObjects","clearSelection","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","entry","redoObject","undoObject","category","addHistoryEntry","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","drop","endGroupAction","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","initialBounds","updateSize","sizeChange","entry_2","changes","getChanges","getPivot","change","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","scaleObjects","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","diagramCanvas","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","isDeleteKey","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","endEdit","findObjectsUnderMouse","findObjectUnderMouse","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","preventDefault","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","setInterval","doAutoScroll","detail","which","isMultipleSelect","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","keyDown","keyCode","keycode","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","startTextEdit","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","getWrapper","isAddTextNode","focusOut","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","actions","actualTarget","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","zIndex","findInteractableObject","_d","_e","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","updateDiagramObject","nodeEndId","portEndId","connectionEventChange","nodeId","portId","argsTarget","transaction","success","failure","portEnd","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","UndoRedo","deleteChild","addChild","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","newObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","process","cloneGroup","cloneSubProcesses","innerChild","addProcess","connector_1","clonedNode","connectorTable","newChildren","childObj","prop","initObject","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","objectId","layerNum","refreshCanvasLayers","bringToFront","tabelLength","diagramLayer","diagramRenderer","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","drag","nodePropertyChange","hasEnds","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToPort","changeSourceEndToNode","secondSegment","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","parent_1","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","nodes_1","scaleObject","updateGroupOffset","isResize","refWrapper","oldleft","oldtop","parent_2","parent_3","changedvalues","nodeBounds","selectorBounds","top_2","expandNode","propChange","expand","expandCollapse","fixedNode","updateIcon","enableAnimation","organizationalChartModule","isAnimation","doLayout","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","undoObj","redoObj","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","DiagramScroller","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","scrollerWidth","diagramWidth","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","localeObj","L10n","locale","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","Render","requiredModules","modules","member","show","dataManager","droppable","tooltipelement","startEvent","Browser","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","canAdd","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","parentElement","addTextAnnotation","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","checkAndRemoveAnnotations","deleteGroup","removeBpmnProcesses","updateNodeEdges","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","ReadOnly","enableReadOnly","textEditing","textarea","toLocaleLowerCase","focusOutEdit","viewPort","updateLayout","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateDefaultLayoutIcons","connection","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","labels","removeLabels","element_1","removePorts","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","textAnnotationConnectors","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","dataSource","url","initSource","independentObj","currentLayer","getDefaults","defaults","initNode","getEndNodeWrapper","updateDefaultLayoutIcon","iconWrapper","portContainer","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","adornerSvg","highlighter","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","connectorSegmentChange","existingInnerBounds","segmentChange","isLayout","existingBounds","updateMargin","updateBPMN","actualPort","updatePort","checkSelectedItem","updateTextAnnotationProp","updateConnectorEdges","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","annotationWrapper","updateAnnotations","updateNodeProperty","selItems","canUpdateSize","isMeasure","portWrapper","String","iconRect","iconShape","enable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","out","dragLeave","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","then","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","annotationNode","setAnnotationPath","annotationConnector","bpmnShapeContent","annotationObj","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","checkAnnotation","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","pre","found","deg","self","zOrder","inter1","intersect2","checkForHorizontalLine","roundedAngle","start1","end1","start2","end2","line3","getLineSegment","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","line1","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","entryObject","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","addObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","historyEntry","ignoreProperty","getProperty","isRedo","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoEntry","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","rootNode","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","rows","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","columns","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","cell","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","palettes","accordionElement","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","symbols","prepareSymbol","renderPalette","paletteDiv","header","title","renderSymbols","addPaletteItem","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","stackPanel","symbolContainer","getSymbolTemplate","symbolInfo","symbolWidth","symbolHeight","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","instance","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}