{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/interaction/selector.js","../src/diagram/core/elements/html-element.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    collection.push({ command: char, x: ob[1], y: ob[2] });\n                    break;\n                case 'l':\n                case 't':\n                    collection.push({ command: char, x: ob[1], y: ob[2] });\n                    break;\n                case 'h':\n                    collection.push({ command: char, x: ob[1] });\n                    break;\n                case 'v':\n                    collection.push({ command: char, y: ob[1] });\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    collection.push({ command: char, x1: ob[1], y1: ob[2], x2: ob[3], y2: ob[4], x: ob[5], y: ob[6] });\n                    break;\n                case 's':\n                    collection.push({ command: char, x2: ob[1], y2: ob[2], x: ob[3], y: ob[4] });\n                    break;\n                case 'q':\n                    collection.push({ command: char, x1: ob[1], y1: ob[2], x: ob[3], y: ob[4] });\n                    break;\n                case 'a':\n                    var l = ob[4];\n                    var s = ob[5];\n                    collection.push({ command: char, r1: ob[1], r2: ob[2], angle: ob[3], largeArc: l, sweep: s, x: ob[6], y: ob[7] });\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the behavior of Tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, srcNode.corners, srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, source.corners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, target.corners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.topCenter.y > target.corners.bottomCenter.y &&\n                    Math.abs(source.corners.topCenter.y - target.corners.bottomCenter.y) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottomCenter.y < target.corners.topCenter.y &&\n                    Math.abs(source.corners.bottomCenter.y - target.corners.topCenter.y) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if (source.corners.middleRight.x < target.corners.middleLeft.x &&\n                    Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) >\n                        (source.margin.right + source.margin.left)) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if (source.corners.middleLeft.x > target.corners.middleRight.x &&\n                    Math.abs(source.corners.middleLeft.x - target.corners.middleRight.x) >\n                        (source.margin.left + source.margin.right)) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!source.corners.equals(source.corners, target.corners)) &&\n                        target.corners.containsPoint(source.corners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, source.corners, element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.middleLeft.x && target.point.x < source.corners.middleRight.x) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.topCenter.y && target.point.y < source.corners.bottomCenter.y) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.topCenter.y\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.topCenter.y && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.topCenter.y + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottomCenter.y) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottomCenter.y)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottomCenter.y - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.middleLeft.x\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.middleLeft.x && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.middleLeft.x + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.middleRight.x\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.middleRight.x && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.middleRight.x - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.middleLeft.x <= source.point.x && source.point.x <= target.corners.middleRight.x))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.topCenter.y)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.topCenter.y) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottomCenter.y)) {\n            direction = 'Bottom';\n            length = (target.corners.bottomCenter.y - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.topCenter.y <= source.point.y && source.point.y <= source.corners.bottomCenter.y) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.topCenter.y + 20) :\n                (source.corners.bottomCenter.y - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.topCenter.y < source.point.y && source.point.y <= target.corners.bottomCenter.y))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.middleLeft.x)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.middleLeft.x) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.middleRight.x)) {\n            direction = 'Right';\n            length = (target.corners.middleRight.x - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.middleLeft.x <= source.point.x && source.point.x <= source.corners.middleRight.x) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.middleLeft.x + 20) :\n                (source.corners.middleRight.x - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.topCenter.y &&\n                source.point.y <= source.corners.bottomCenter.y)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.topCenter.y > source.point.y && target.corners.bottomCenter.y < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.topCenter.y < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottomCenter.y < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.topCenter.y &&\n                source.point.y <= source.corners.bottomCenter.y)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.topCenter.y <= source.point.y\n                && target.corners.bottomCenter.y >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.middleLeft.x &&\n                source.point.x <= source.corners.middleRight.x) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.middleLeft.x &&\n                source.point.x < target.corners.middleRight.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.middleLeft.x &&\n                target.corners.middleRight.x > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.middleLeft.x &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.middleRight.x &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, source.corners, element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.topCenter.y &&\n            source.point.y <= source.corners.bottomCenter.y) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.topCenter.y <= source.point.y && target.corners.bottomCenter.y >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.middleLeft.x <= source.point.x && target.corners.middleRight.x >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottomCenter.y - source.point.y + 20) :\n                (source.point.y - source.corners.topCenter.y + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.middleLeft.x && source.point.x <= source.corners.middleRight.x) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.middleRight.x - source.point.x + 20) :\n                (source.point.x - source.corners.middleLeft.x + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.middleLeft.x + 20) :\n                    (source.corners.middleRight.x - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.topCenter.y + 20) :\n                    (source.corners.bottomCenter.y - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, sourceNode.corners, sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var direction = getPortDirection(port, sourceNode.corners, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, sourceNode.corners, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findEndPoint(source.direction, nodeConnectingPoint, node);\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { X1: sPt.x, Y1: sPt.y, X2: tPt.x, Y2: tPt.y };\n    return line;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(source.corners, source.direction);\n            refPoint = findEndPoint(source.direction, source.point, sourceEle);\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(target.corners, target.direction);\n            refPoint = findEndPoint(target.direction, target.point, targetEle);\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, source.corners, ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.middleLeft.x && target.point.x <= source.corners.middleRight.x &&\n        source.point.y >= source.corners.topCenter.y && source.point.y <= source.corners.bottomCenter.y) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.topCenter.y + 20) :\n            (source.corners.bottomCenter.y - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.topCenter.y\n            && source.point.y <= source.corners.bottomCenter.y)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.middleLeft.x\n            && source.point.x <= source.corners.middleRight.x)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottomCenter.y - source.point.y + 20) :\n            (source.point.y - source.corners.topCenter.y + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (ele.targetWrapper.corners.containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottomCenter.y) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottomCenter.y + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.topCenter.y) {\n                    segment.points[segment.points.length - 1].y = target.corners.topCenter.y - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.middleLeft.x) {\n                    segment.points[segment.points.length - 1].x = target.corners.middleLeft.x - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.middleRight.x) {\n                    segment.points[segment.points.length - 1].x = target.corners.middleRight.x + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = node.corners;\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findEndPoint(target.direction, target.point, node);\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\nfunction findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\nfunction getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    if (ele.type === 'Orthogonal') {\n        var constValue = Math.abs(child.bounds.height - child.actualSize.height) / 2 + 5;\n        if (sPt.x === tPt.x) {\n            if (sPt.y < tPt.y) {\n                sPt.y -= constValue;\n            }\n            else {\n                sPt.y += constValue;\n            }\n        }\n        constValue = Math.abs(child.bounds.width - child.actualSize.width) / 2 + 5;\n        if (sPt.y === tPt.y) {\n            if (sPt.x < tPt.x) {\n                sPt.x -= constValue;\n            }\n            else {\n                sPt.x += constValue;\n            }\n        }\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { X1: sPt.x, Y1: sPt.y, X2: tPt.x, Y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || ((isTar) ? tPt : sPt);\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        X1: pts[0].x, Y1: pts[0].y, X2: pts[1].x,\n        Y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                X1: pts[i].x, Y1: pts[i].y,\n                X2: pts[i + 1].x, Y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.X1;\n    var y1 = segment1.Y1;\n    var x2 = segment1.X2;\n    var y2 = segment1.Y2;\n    var x3 = segment2.X1;\n    var y3 = segment2.Y1;\n    var x4 = segment2.X2;\n    var y4 = segment2.Y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction findEndPoint(direction, point, node) {\n    var targetPoint;\n    switch (direction) {\n        case 'Bottom':\n            targetPoint = { x: point.x, y: point.y - Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n        case 'Top':\n            targetPoint = { x: point.x, y: point.y + Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n        case 'Right':\n            targetPoint = { y: point.y, x: point.x - Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n        case 'Left':\n            targetPoint = { y: point.y, x: point.x + Math.max(node.actualSize.width, node.actualSize.height) };\n            break;\n    }\n    return targetPoint;\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottomCenter.y + margin < target.corners.topCenter.y - margin ||\n        source.corners.topCenter.y - margin > target.corners.bottomCenter.y + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.middleRight.x < target.corners.middleLeft.x\n        || (swap && source.corners.middleRight.x < target.corners.middleLeft.x))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.middleRight.x + source.margin.right < target.corners.middleLeft.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (source.corners.containsPoint(left) || target.corners.containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottomCenter.y <= target.corners.topCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.topCenter.y >= target.corners.topCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.topCenter.y) ||\n        (srcPort === undefined && source.corners.middleRight.y <= target.corners.topCenter.y)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottomCenter.y) ||\n        (srcPort === undefined && source.corners.middleRight.y >= target.corners.bottomCenter.y)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.middleRight.x >= targetObj.corners.middleRight.x) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.topCenter.y ||\n            sourcePort.offsetY > targetObj.corners.bottomCenter.y)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.topCenter.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottomCenter.y + targetObj.margin.bottom\n            && sourceObj.corners.topCenter.y > targetObj.corners.bottomCenter.y) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottomCenter.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.topCenter.y\n            && sourceObj.corners.bottomCenter.y > targetObj.corners.topCenter.y) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottomCenter.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.middleRight.x < targetObj.corners.middleLeft.x ||\n            targetObj.corners.middleRight.x < sourceObj.corners.middleLeft.x) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottomCenter.y < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottomCenter.y < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.topCenter.y > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.topCenter.y > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.middleLeft.x &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.middleRight.x - targetObj.corners.middleLeft.x) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.middleRight.x < targetObj.corners.middleLeft.x &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.middleRight.x < targetObj.corners.middleLeft.x) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.topCenter.y - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottomCenter.y < target.corners.topCenter.y - target.margin.top)) {\n        if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            if ((tarPort !== undefined && source.corners.middleRight.x + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.middleRight.x + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.middleLeft.x > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.middleLeft.x > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.topCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.middleRight.x < target.corners.middleLeft.x) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (source.corners.containsPoint(top) || target.corners.containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottomCenter.y + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottomCenter.y + target.margin.bottom)) {\n        if (source.corners.topCenter.y > target.corners.bottomCenter.y) {\n            if ((tarPort !== undefined && source.corners.middleRight.x + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.middleRight.x + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.middleLeft.x > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.middleLeft.x > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottomCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.middleRight.x < target.corners.middleLeft.x) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.middleRight.x + margin < target.corners.middleLeft.x - margin ||\n        source.corners.middleLeft.x - margin > target.corners.middleRight.x + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottomCenter.y < target.corners.topCenter.y) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottomCenter.y + source.margin.bottom < target.corners.topCenter.y - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.middleRight.x + source.margin.right < target.corners.middleLeft.x - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.middleLeft.x - source.margin.left > target.corners.middleRight.x + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.middleLeft.x - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.middleRight.x < target.corners.middleLeft.x) {\n            if ((tarPort !== undefined && source.corners.bottomCenter.y + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottomCenter.y + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.topCenter.y > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.topCenter.y > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.middleRight.x - target.corners.middleLeft.x) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottomCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottomCenter.y < target.corners.bottomCenter.y) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.middleLeft.x - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.middleLeft.x - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.middleRight.x + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.middleRight.x + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.middleLeft.x > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.middleLeft.x > target.corners.middleLeft.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.middleRight.x < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.middleRight.x < target.corners.middleRight.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.topCenter.y > target.corners.bottomCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.topCenter.y - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottomCenter.y < target.corners.topCenter.y - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.topCenter.y - target.margin.top))) {\n        if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            if ((tarPort !== undefined && source.corners.middleLeft.x - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.middleLeft.x - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.middleRight.x < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.middleRight.x < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.middleLeft.x - target.corners.middleRight.x) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.topCenter.y) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (source.corners.containsPoint(top) || target.corners.containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.middleLeft.x > target.corners.middleRight.x) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.middleLeft.x < target.corners.middleLeft.x) {\n        if ((targetPort !== undefined && source.corners.bottomCenter.y + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottomCenter.y + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.topCenter.y - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.topCenter.y - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.middleRight.x < target.corners.middleLeft.x ||\n            target.corners.middleRight.x < source.corners.middleLeft.x) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.topCenter.y - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.topCenter.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottomCenter.y + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottomCenter.y + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.middleLeft.x > target.corners.middleRight.x) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.topCenter.y < target.corners.topCenter.y) {\n        if ((targetPort !== undefined && source.corners.middleLeft.x > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.middleLeft.x > target.corners.middleLeft.x)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.middleRight.x < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.middleRight.x < target.corners.middleRight.x)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottomCenter.y < target.corners.topCenter.y) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.middleRight.x) ||\n        (srcPort === undefined && source.corners.middleLeft.x > target.corners.middleRight.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.middleLeft.x) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.middleLeft.x)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.topCenter.y > target.corners.bottomCenter.y) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    if (tar !== undefined) {\n        if (tarPort === undefined) {\n            var refPoint = findEndPoint(target.direction, target.point, tar);\n            target.point = getIntersection(element, tar, target.point, refPoint, true);\n        }\n    }\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > srcCorner.middleLeft.x) {\n                extra = (source.point.x - srcCorner.middleLeft.x) > extra ? ((source.point.x - srcCorner.middleLeft.x) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < srcCorner.middleRight.x) {\n                extra = (srcCorner.middleRight.x - source.point.x) > extra ? ((srcCorner.middleRight.x - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > srcCorner.topCenter.y) {\n                extra = (source.point.y - srcCorner.topCenter.y) > extra ? ((source.point.y - srcCorner.topCenter.y) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < srcCorner.bottomCenter.y) {\n                extra = (srcCorner.bottomCenter.y - source.point.y) > extra ? ((srcCorner.bottomCenter.y - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.middleLeft.x - source.margin.left;\n    var sRight = source.corners.middleRight.x + source.margin.right;\n    var sBottom = source.corners.bottomCenter.y + source.margin.bottom;\n    var sTop = source.corners.topCenter.y - source.margin.top;\n    var tLeft = target.corners.middleLeft.x - target.margin.left;\n    var tRight = target.corners.middleRight.x + target.margin.right;\n    var tBottom = target.corners.bottomCenter.y + target.margin.bottom;\n    var tTop = target.corners.topCenter.y - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.middleLeft.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.topCenter.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.middleRight.x - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottomCenter.y - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix } from '../primitives/matrix';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the Bpmn flows\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription) {\n        annotation.id = annotation.id || randomId();\n        var textele = new TextElement();\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        if (bounds.width !== undefined) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.content = annotation.content;\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        textele.style.textOverflow = 'Wrap';\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        annotation.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        textElement.refreshTextElement();\n        textElement.width = (annotation.width || bounds.width) - textElement.margin.left - textElement.margin.right;\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    return node.constraints & NodeConstraints.Rotate;\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { X1: start.x, X2: end.x, Y1: start.y, Y2: end.y };\n            var segment2 = { X1: reference.x, X2: intersectinPt.x, Y1: reference.y, Y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.Y2 - l2.Y1) * (l1.X2 - l1.X1) - (l2.X2 - l2.X1) * (l1.Y2 - l1.Y1);\n    var na = (l2.X2 - l2.X1) * (l1.Y1 - l2.Y1) - (l2.Y2 - l2.Y1) * (l1.X1 - l2.X1);\n    var nb = (l1.X2 - l1.X1) * (l1.Y1 - l2.Y1) - (l1.Y2 - l1.Y1) * (l1.X1 - l2.X1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.X1 + (ua * (l1.X2 - l1.X1));\n        point.y = l1.Y1 + (ua * (l1.Y2 - l1.Y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    var X1 = corners.topLeft;\n    var X2 = corners.topRight;\n    var Y1 = corners.bottomRight;\n    var Y2 = corners.bottomLeft;\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        X1 = transformPointByMatrix(matrix, X1);\n        X2 = transformPointByMatrix(matrix, X2);\n        Y1 = transformPointByMatrix(matrix, Y1);\n        Y2 = transformPointByMatrix(matrix, Y2);\n    }\n    line.push(X1);\n    line.push(X2);\n    line.push(Y1);\n    line.push(Y2);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.outerBounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    var selectedNodes = getCollection(dataObj.selectedItems.nodes, diagram.nodes);\n    var selcectedConnectors = getCollection(dataObj.selectedItems.connectors, diagram.connectors);\n    var selectedItems = [];\n    selectedItems = selectedItems.concat(selectedNodes).concat(selcectedConnectors);\n    diagram.select(selectedItems);\n    return dataObj;\n}\nfunction getCollection(objNodes, diagramNodes) {\n    var collection = [];\n    for (var i = 0; i < objNodes.length; i++) {\n        for (var _i = 0, diagramNodes_1 = diagramNodes; _i < diagramNodes_1.length; _i++) {\n            var connectors = diagramNodes_1[_i];\n            if (connectors.id === objNodes[i].id) {\n                collection.push(connectors);\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = document.getElementById(actualObject.wrapper.children[0].id + '_groupElement');\n            if (newValues.shape.content !== undefined && nativeElement) {\n                nativeElement.removeChild(nativeElement.children[0]);\n                actualObject.wrapper.children[0].content = newValues.shape.content;\n                nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = document.getElementById(actualObject.wrapper.children[0].id + '_html_element');\n            if (htmlElement) {\n                htmlElement.removeChild(htmlElement.children[0]);\n                actualObject.wrapper.children[0].content = newValues.shape.content;\n                htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints) {\n    if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\nexport function findPortIndex(node, id) {\n    var index;\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return nodes[i];\n        }\n    }\n    if (diagramElement[instance][0].enterObject && diagramElement[instance][0].enterObject === element.nodeId) {\n        return diagramElement[instance][0].enterObject;\n    }\n    return null;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = eachLine[j].split(' ');\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = document.createElement('Span');\n    text.setAttribute('style', 'display:inline-block ; line-height: normal');\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(diagramId) {\n    var diagramElement = document.getElementById(diagramId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n/** @private */\nexport function getExpandCollapseLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramPortSvg = getPortLayerSvg(diagramId);\n    expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander');\n    return expandCollapse;\n}\n/** @private */\nexport function getPortsLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramPortSvg = getPortLayerSvg(diagramId);\n    expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts');\n    return expandCollapse;\n}\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = document.createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var element = document.getElementById(contentId);\n    var div = (contentId && element) ? document.getElementById(contentId).querySelector('#' + elementId) :\n        document.getElementById(elementId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createElement('div', { id: 'measureElement', styles: 'visibility:hidden' });\n        var text = document.createElement('Span');\n        text.setAttribute('style', 'display:inline-block ; line-height: normal');\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = document.createElement('img');\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners = new Rect();\n    var top = element.offsetY - element.actualSize.height * element.pivot.y;\n    var bottom = element.offsetY + element.actualSize.height * (1 - element.pivot.y);\n    var left = element.offsetX - element.actualSize.width * element.pivot.x;\n    var right = element.offsetX + element.actualSize.width * (1 - element.pivot.x);\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var topLeft = { x: left, y: top };\n    var topRight = { x: right, y: top };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    corners = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners = corners;\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        topLeft = transformPointByMatrix(matrix, topLeft);\n        topRight = transformPointByMatrix(matrix, topRight);\n        bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId'];\n        case 'connectors':\n            return ['parentId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        var handle = diagram.selectedItems;\n        if (hasSingleConnection(diagram)) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = { x: x + element.actualSize.width / 2, y: y - 30 / diagram.scroller.currentZoom };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            if ((canShowCorner(handle.constraints, 'Rotate')) && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                return 'Rotate';\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false)) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var node = diagram.selectedItems.nodes[0];\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer'\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n        }\n        content.style.strokeDashArray = '2 2 6 2';\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        if (node.shape.activity.subProcess) {\n            var subProcess = node.shape.activity.subProcess;\n            var eventLength = subProcess.events.length;\n            var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n            var elementWrapper = node.wrapper.children[0].children[0];\n            if (subProcess.adhoc === false) {\n                elementWrapper.children[3 + index + eventLength].visible = false;\n            }\n            if (subProcess.compensation === false) {\n                elementWrapper.children[4 + index + eventLength].visible = false;\n            }\n            if (eventLength > 0) {\n                for (var i = 0; i < eventLength; i++) {\n                    this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    diagram.remove(diagram.nameTable[edges[i]]);\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes && !subProcess.collapsed) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        if (node.width !== undefined && node.height !== undefined) {\n            bounds = new Rect(node.offsetX - node.width / 2, node.offsetY - node.height / 2, node.width, node.height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~ConnectorConstraints.DragTargetEnd,\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                X1: parentBounds.right, Y1: parentBounds.top,\n                X2: parentBounds.right, Y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                X1: parentBounds.left, Y1: parentBounds.top,\n                X2: parentBounds.left, Y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                X1: parentBounds.right, Y1: parentBounds.bottom,\n                X2: parentBounds.left, Y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                X1: parentBounds.right, Y1: parentBounds.top,\n                X2: parentBounds.left, Y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.findInteractableObject = function (obj, diagram) {\n        if (obj.targetID) {\n            var targetNode = diagram.nameTable[obj.targetID];\n            if (targetNode.shape.type === 'Bpmn' && targetNode.shape.shape === 'TextAnnotation') {\n                return targetNode;\n            }\n        }\n        return obj;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.canAdd = function (obj) {\n        if (obj.shape && obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation') {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        if (bpmnShape.event.trigger) {\n            elementWrapper.height = elementWrapper.height * 0.8;\n        }\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Default - Enables/Disables Default constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * continuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * @private\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds, randomId } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Gets/Sets the corners of the rectangular bounds\n         */\n        this.corners = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        this.isRectElement = false;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        this.float = false;\n        this.floatingBounds = undefined;\n        this.id = randomId();\n    }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the stop of gradient\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Defines the gradient of styles\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * Defines the radial gradient of styles\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        //Private variables\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        get: function () {\n            return this.pathData;\n        },\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the native element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'white', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        get: function () {\n            return this.textContent;\n        },\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        get: function () {\n            return this.textNodes;\n        },\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        get: function () {\n            return this.textWrapBounds;\n        },\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        get: function () {\n            return this.imageSource;\n        },\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    if (child.rotateAngle !== 0) {\n                        childSize = rotateSize(childSize, child.rotateAngle);\n                    }\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                child.arrange(child.desiredSize);\n                this.outerBounds.uniteRect(child.outerBounds);\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width + child.margin.right;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height + child.margin.bottom;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotation\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShape\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the behavior of selector\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the behavior of the selected objects\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.nodes || this.connectors) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                var node = diagram.nameTable[this.nodes[i].id];\n                var wrapper = node.wrapper;\n                // this.width = wrapper.actualSize.width; \n                // this.height = wrapper.actualSize.height;\n                // this.rotateAngle = wrapper.rotateAngle;\n                // this.offsetX = wrapper.offsetX;\n                // this.offsetY = wrapper.offsetY;\n                container.children.push(wrapper);\n            }\n            for (var j = 0; j < this.connectors.length; j++) {\n                var connector = diagram.nameTable[this.connectors[j].id];\n                var wrapper = connector.wrapper;\n                // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                // this.offsetY = wrapper.offsetY;\n                container.children.push(wrapper);\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content = new DiagramElement();\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if (this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = this.children ? new Container() : new Canvas();\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent = new TextElement();\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        var style = annotation.style;\n        var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n        annotationcontent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n            bold: style.bold, textWrapping: style.textWrapping,\n            color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n            fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n            textDecoration: link ? link.textDecoration || annotationcontent.hyperlink.textDecoration : style.textDecoration,\n        };\n        annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n        annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n        annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n        annotationcontent.content = link ? link.content || annotationcontent.hyperlink.link : annotation.content;\n        if (this.width !== undefined) {\n            annotationcontent.width = this.width - annotation.margin.left - annotation.margin.right;\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.offset = 0;\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = document.createElement('div');\n            div.setAttribute('id', this.element.id + '_ruler_space');\n            div.style.height = rulerGeometry.height + 'px';\n            div.style.width = rulerGeometry.width + 'px';\n            div.style.cssFloat = 'left';\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = document.createElement('canvas');\n        canvasObj.setAttribute('id', id);\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.drawImage = function (canvas, obj) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX = obj.x + obj.width * obj.pivotX;\n            var pivotY = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            imageObj.onload = function () {\n                ctx_1.rotate(obj.angle * Math.PI / 180);\n                var image = new Image();\n                image.src = obj.source;\n                _this.image(ctx_1, image, obj.x, obj.y, obj.width, obj.height, obj);\n                ctx_1.rotate(-(obj.angle * Math.PI / 180));\n            };\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = document.createElement('canvas');\n                canvas1.setAttribute('width', width.toString());\n                canvas1.setAttribute('height', height.toString());\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + (element.corners.x) + 'px; top:' + ((element.corners.y)) + 'px;' +\n            'position:absolute;transform:rotate(' + element.parentTransform + 'deg);' +\n            'pointer-events:all;visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 0;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { getDiagramLayer, getExpandCollapseLayer, getPortsLayer, getNativeLayer } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        this.renderer = null;\n        this.isSvgMode = true;\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) {\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                canvas.appendChild(gElement);\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (nodeWidth >= 40 && nodeHeight >= 40) {\n            //Hide corners when the size is less than 40\n            if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n            }\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeWest) {\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeEast) {\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n        }\n    };\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            defs.appendChild(pattern);\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = '';\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform);\n        }\n    };\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg);\n    };\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true);\n            }\n        }\n    };\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        //diagram layer\n        if (svgMode) {\n            var diagramLayer = getDiagramLayer(this.diagramId);\n            diagramLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n        }\n        //background\n        //gridline\n        var gridLayer = getGridLayer(this.diagramId);\n        gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n            + (transform.ty * transform.scale) + ')');\n        //portslayer    \n        var portsLayer = getPortsLayer(this.diagramId);\n        portsLayer.setAttribute('transform', 'translate('\n            + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n            + transform.scale + ')');\n        //expandlayer\n        var expandLayer = getExpandCollapseLayer(this.diagramId);\n        expandLayer.setAttribute('transform', 'translate('\n            + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n            + transform.scale + ')');\n        //nativelayer\n        var nativeLayer = getNativeLayer(this.diagramId);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n            + transform.scale + ')');\n        //htmlLayer\n        var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n        htmlLayer.style.transform = 'translate('\n            + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n            + transform.scale + ')';\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the BackgroundImage of diagram\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines PageSettings\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Defines gridlines\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the public properties of diagram\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * defines the Properties for the Diagram Ruler\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines rulers\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd');\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd');\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd');\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && canOutConnect(args.target))\n                    || (this.endPoint === 'ConnectorTargetEnd' && canInConnect(args.target)))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    this.commandHandler.connect(this.endPoint, args);\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                var redoObject = { nodes: [], connectors: [] };\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            if (obj.offsetX !== this.undoElement.offsetX || obj.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            if (args.source instanceof Node) {\n                if (args.source.offsetX === this.undoElement.nodes[0].offsetX &&\n                    args.source.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(args.source.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(args.source.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (args.source.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                args.source.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (args.source) {\n            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n        }\n        var arg = {\n            source: args.source, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (args.source) {\n                oldValues_1 = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                newValues = {\n                    offsetX: args.source.wrapper.offsetX + snappedPoint.x,\n                    offsetY: args.source.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: args.source, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drawHighlighter(this.currentTarget);\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    RotateTool.prototype.mouseUp = function (args) {\n        if (this.undoElement.rotateAngle !== args.source.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.rotateAngle === args.source.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: this.currentElement.wrapper.offsetX, y: this.currentElement.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - this.currentElement.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        if (this.undoElement.offsetX !== args.source.wrapper.offsetX || this.undoElement.offsetY !== args.source.wrapper.offsetY) {\n            this.blocked = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.offsetX === args.source.wrapper.offsetX && this.undoElement.offsetY === args.source.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        this.blocked = !(this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getPivot = function () {\n        switch (this.corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    ResizeTool.prototype.updateSize = function (shape, startPoint, endPoint, corner) {\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -shape.rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var initialBounds = this.initialBounds;\n        var diff;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) : difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / shape.width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / shape.width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / shape.height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, diff.x, diff.y, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / shape.height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / shape.width;\n                deltaHeight = (initialBounds.height - dify) / shape.height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                deltaWidth = (initialBounds.width - difx) / shape.width;\n                deltaHeight = (initialBounds.height - dify) / shape.height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, this.initialBounds) :\n                    difx;\n                deltaHeight = (initialBounds.height + dify) / shape.height;\n                deltaWidth = (initialBounds.width + difx) / shape.width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / shape.width;\n                deltaHeight = (initialBounds.height + dify) / shape.height;\n                break;\n        }\n        return this.scaleObjects(matrix, deltaWidth, deltaHeight, corner, startPoint, endPoint, shape);\n    };\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (matrix, deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot());\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot());\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { X1: line1Start.x, Y1: line1Start.y, X2: line1End.x, Y2: line1End.y };\n            var line2 = { X1: line2Start.x, Y1: line2Start.y, X2: line2End.x, Y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction } from '../utility/base-util';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (this.tool instanceof PolygonDrawingTool && (evt.button === 2 || evt.buttons === 2)) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs, arg);\n            }\n            else if ((this.inAction === true) && this.isMouseDown === true && this.tool instanceof PolygonDrawingTool) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                this.diagram.endEdit();\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n                        this.initialEventArgs.source && this.action === 'Select') {\n                        if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                            this.eventArgs.source instanceof Selector) {\n                            this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                        }\n                        if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                            !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                                contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                            this.action = 'Drag';\n                        }\n                        this.tool = this.getTool(this.action);\n                        this.tool.mouseDown(this.initialEventArgs);\n                    }\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        touches = evt.touches;\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool) && evt.detail === 2))) {\n                this.diagram.endEdit();\n                document.getElementById(this.diagram.element.id + 'content').focus();\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        //end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.endEdit();\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && this.tool instanceof PolygonDrawingTool) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === \"nudgeRight\" || i === \"nudgeDown\" || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right > this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            this.eventArgs.position = { x: this.tool.prevPosition.x, y: this.tool.prevPosition.y };\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            switch (position) {\n                case 'right':\n                    this.eventArgs.position.x += 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    this.eventArgs.position.x -= 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    this.eventArgs.position.y += 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    this.eventArgs.position.y -= 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            arg.element = this.lastObjectUnderMouse;\n            arg.targets = arg.actualObject = undefined;\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && this.tool instanceof PolygonDrawingTool) {\n                    var arg_1 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs, arg_1);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width > textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            width = textBounds.width;\n            width = (minWidth > width) ? minWidth : width;\n            height = (minHeight > textBounds.height) ? minHeight : textBounds.height;\n            transforms = this.diagram.scroller.transform;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) || getObjectFromCollection(this.diagram.connectors, node.id)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action === 'Rotate' || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        return getCursor(action, this.diagram.selectedItems.rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        matrix = identityMatrix();\n                        rotateMatrix(matrix, -(container.rotateAngle + container.parentTransform), obj.offsetX, obj.offsetY);\n                        point = transformPointByMatrix(matrix, pt);\n                        bounds = container.corners;\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            bounds.uniteRect(child.corners);\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : bounds.containsPoint(point)) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element) {\n                                    if (obj instanceof Connector && diagram.bpmnModule) {\n                                        obj = diagram.bpmnModule.findInteractableObject(obj, diagram);\n                                    }\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canOutConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canInConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (actualTarget.parentId) {\n                    var obj = actualTarget;\n                    var selected = isSelected(diagram, obj);\n                    while (obj) {\n                        if (isSelected(diagram, obj) && !selected) {\n                            break;\n                        }\n                        actualTarget = obj;\n                        obj = diagram.nameTable[obj.parentId];\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the BackgroundImage of diagram\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, rotatePoint } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findPortIndex } from './../utility/diagram-util';\nimport { randomId } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection } from './../utility/connector';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        this.clipboardData = {};\n        this.connectorsTable = [];\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) {\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd');\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd');\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = clone((selectedItems[j]));\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    this.diagram.remove(item);\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '' }, { targetID: newConnector.targetID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '' }, { sourceID: newConnector.sourceID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = [];\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else {\n            this.translateObject(cloneObject);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        children = children.concat(obj.children);\n        if (this.clipboardData.childTable) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = this.clipboardData.childTable[children[i]];\n                if (childObj) {\n                    var newObj = void 0;\n                    if (getObjectType(childObj) === Connector) {\n                        newObj = this.cloneConnector(childObj, multiSelect);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect);\n                    }\n                    newChildren.push(newObj.id);\n                }\n            }\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj) {\n        obj.id += randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement');\n        var backNode = getDiagramElement(nodeId + '_groupElement');\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement');\n                element.parentNode.removeChild(element);\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                }\n                this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n            else if (target && (connector.sourceID !== target.id || connector.sourcePortID === '') &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, target.wrapper.corners, target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, pivot, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n            }\n            else {\n                this.scaleObject(sw, sh, pivot, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent) {\n        var temp = node;\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (!node.children) {\n                nodes.push(node);\n            }\n            else {\n                if (includeParent) {\n                    nodes.push(node);\n                }\n                nodes = this.getAllDescendants(node, nodes);\n            }\n        }\n        return nodes;\n    };\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n            var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n            var refPoint = { x: x + refWrapper.actualSize.width * pivot.x, y: y + refWrapper.actualSize.height * pivot.y };\n            refPoint = rotatePoint(refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, refPoint);\n            rotateMatrix(matrix, -refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        width: node.width, height: node.height, offsetX: node.offsetX,\n                        offsetY: node.offsetY, margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                    });\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        var index = findPortIndex(obj, port.id);\n        var ports = {};\n        ports[index] = { offset: { x: port.offset.x, y: port.offset.y } };\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = { ports: ports };\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            ports = {};\n            ports[index] = { offset: { x: port.offset.x, y: port.offset.y } };\n            changedvalues = { ports: ports };\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        this.expandNode(node, false, this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, propChange, diagram) {\n        var animation;\n        var objects;\n        var expand = propChange ? node.isExpanded : !node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (!propChange) {\n            this.diagram.updateIcon(node);\n        }\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (target.isExpanded) {\n                this.expandCollapse(target, visibility, diagram);\n            }\n            var oldValues = {\n                visible: target.visible\n            };\n            target.visible = visibility;\n            var newValues = {\n                visible: target.visible\n            };\n            diagram.nodePropertyChange(target, oldValues, newValues);\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                if (option === 'Left') {\n                    if (objects[i] instanceof Node) {\n                        tx = bounds.topLeft.x +\n                            objects[i].width / 2 - objects[i].offsetX;\n                    }\n                    else {\n                        tx = bounds.topLeft.x - objects[i].sourcePoint.x;\n                    }\n                }\n                else if (option === 'Right') {\n                    if (objects[i] instanceof Node) {\n                        tx = bounds.topRight.x -\n                            objects[i].width / 2 - objects[i].offsetX;\n                    }\n                    else {\n                        tx = bounds.topRight.x - objects[i].wrapper.bounds.width -\n                            objects[i].sourcePoint.x;\n                    }\n                }\n                else if (option === 'Top') {\n                    if (objects[i] instanceof Node) {\n                        ty = bounds.top + objects[i].height / 2 - objects[i].offsetY;\n                    }\n                    else {\n                        ty = bounds.top - objects[i].sourcePoint.y;\n                    }\n                }\n                else if (option === 'Bottom') {\n                    if (objects[i] instanceof Node) {\n                        ty = bounds.bottom - objects[i].height / 2 - objects[i].offsetY;\n                    }\n                    else {\n                        ty = bounds.bottom - objects[i].sourcePoint.y;\n                    }\n                }\n                else if (option === 'Center') {\n                    if (objects[i] instanceof Node) {\n                        tx = bounds.center.x - objects[i].offsetX;\n                    }\n                    else {\n                        j = Math.abs(bounds.width -\n                            objects[i].wrapper.bounds.width);\n                        tx = bounds.bottomLeft.x - j / 2 - objects[i].sourcePoint.x;\n                    }\n                }\n                else if (option === 'Middle') {\n                    if (objects[i] instanceof Node) {\n                        ty = bounds.center.y - objects[i].offsetY;\n                    }\n                    else {\n                        ty = bounds.center.y - objects[i].sourcePoint.y;\n                    }\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n        if (this.scrolled) {\n            this.diagram.endEdit();\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = quad.objects.indexOf(node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines keyboard commands\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canResize, canSingleSelect, canZoomPan } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\n/**\n * Diagram control\n * ```\n * <div id='diagram'/>\n * <script>\n *   var diagramObj = new Diagram({ width:'1000px', height:'500px' });\n *   diagramObj.appendTo('#diagram');\n * </script>\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.enterObject = {};\n        _this.renderTimer = null;\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        /**\n         * Used to end the context menu rendering\n         */\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        this.initCommands();\n        this.isLoading = false;\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        this.drag(obj, tx, ty);\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option);\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            if (this.bpmnModule) {\n                if (!this.bpmnModule.canAdd(obj)) {\n                    return null;\n                }\n            }\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            this.triggerEvent(DiagramEvent.collectionChange, args);\n            var activeLayer = void 0;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    //  newObj.processId = (obj as Node).processId;\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement');\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement');\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement');\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0) {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement');\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement');\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                if (this.bpmnModule) {\n                    if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                        this.refreshCanvasLayers();\n                        return;\n                    }\n                }\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                parentNode.children.push(id);\n                parentNode.wrapper.children.push(this.nameTable[id].wrapper);\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            var transform = this.scroller.transform;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.createElement('div');\n                    var textarea = document.createElement('textarea');\n                    textEditing.appendChild(textarea);\n                    text = textWrapper.content;\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    bounds.width = Math.max(bounds.width, 50);\n                    x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - bounds.width / 2) - 2.5);\n                    y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - bounds.height / 2) - 3);\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv',\n                        'style': 'position: absolute' + ';left:' + x + 'px;top:' + y + 'px;width:' + (bounds.width + 1) +\n                            'px;height:' + bounds.height + 'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox',\n                        'style': 'width:' + (bounds.width + 1) + 'px;height:' + bounds.height +\n                            'px;resize: none;outline: none;overflow: hidden;' +\n                            'font-family:' + style.fontFamily + ';font-size:' + style.fontSize + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';',\n                        'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textarea, attributes);\n                    textarea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textarea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textarea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    textarea.appendChild(document.createTextNode(text));\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    this.diagramCanvas.appendChild(textEditing);\n                    EventHandler.add(textarea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                    EventHandler.add(textarea, 'focusout', this.focusOutEdit, this);\n                    textarea.focus();\n                    textarea.select();\n                }\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                this.updateIcon(node);\n                this.updateDefaultLayoutIcons(node);\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            this.refreshDiagramLayer();\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            var canvas = obj.wrapper;\n            canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            for (var i = 0; i < obj.wrapper.children.length; i++) {\n                var canvas = obj.wrapper.children[i];\n                if (canvas instanceof TextElement) {\n                    if (canvas.id.match('_' + labels[j].id + '$')) {\n                        for (var k = 0; k < obj.annotations.length; k++) {\n                            if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                                if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                    var entry = {\n                                        type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                        redoObject: cloneObject(obj), category: 'Internal'\n                                    };\n                                    this.addHistoryEntry(entry);\n                                }\n                                obj.annotations.splice(k, 1);\n                            }\n                        }\n                        obj.wrapper.children.splice(i, 1);\n                        if (this.mode === 'SVG') {\n                            var element = getDiagramElement(canvas.id);\n                            if (element) {\n                                var element_1 = getDiagramElement(canvas.id);\n                                element_1.parentNode.removeChild(element_1);\n                            }\n                            var textElement = getDiagramElement(canvas.id + '_text');\n                            if (textElement) {\n                                element = getDiagramElement(canvas.id + '_text');\n                                element.parentNode.removeChild(element);\n                            }\n                        }\n                        else {\n                            this.refreshCanvasLayers();\n                        }\n                    }\n                }\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = 0; j < ports.length; j++) {\n            for (var i = 0; i < obj.wrapper.children.length; i++) {\n                var canvas = obj.wrapper.children[i];\n                if (canvas instanceof PathElement) {\n                    if (canvas.id.match('_' + ports[j].id + '$')) {\n                        for (var k = 0; k < obj.ports.length; k++) {\n                            if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                                if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                    var entry = {\n                                        type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                        redoObject: cloneObject(obj), category: 'Internal'\n                                    };\n                                    this.addHistoryEntry(entry);\n                                }\n                                obj.ports.splice(k, 1);\n                            }\n                        }\n                        obj.wrapper.children.splice(i, 1);\n                        if (this.mode === 'SVG') {\n                            var element = getDiagramElement(canvas.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        else {\n                            this.refreshCanvasLayers();\n                        }\n                    }\n                }\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes;\n        this.diagramLayerDiv = document.createElement('div');\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        setAttributeHtml(this.diagramLayerDiv, attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n    };\n    Diagram.prototype.initData = function () {\n        if (this.dataBindingModule) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    var getDefaults = getFunction(this.getNodeDefaults);\n                    if (getDefaults) {\n                        var defaults = getDefaults(obj, this);\n                        if (defaults && defaults !== obj) {\n                            extendObject(defaults, obj);\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            if (independentObj) {\n                var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n                if (!checkBoundaryConstraints) {\n                    var node = obj instanceof Node ? this.nodes : this.connectors;\n                    for (var i = 0; i <= node.length; i++) {\n                        if (node[i] && obj.id === node[i].id) {\n                            node.splice(i, 1);\n                        }\n                    }\n                }\n                layer.zIndexTable[obj.zIndex] = obj.id;\n            }\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                this.updateGroupOffset(obj);\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    node.parentId = obj.id;\n                }\n                if (!this.isLoading && obj.rotateAngle) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node) {\n        if ((node.children && node.children.length > 0) || (node.processId)) {\n            this.nameTable[node.id].offsetX = node.wrapper.offsetX;\n            this.nameTable[node.id].offsetY = node.wrapper.offsetY;\n            if ((node.children && node.children.length > 0)) {\n                this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                this.nameTable[node.id].height = node.wrapper.actualSize.height;\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            for (var i = 0; i < obj.children.length; i++) {\n                if (this.nameTable[obj.children[i]]) {\n                    canvas.children.push(this.nameTable[obj.children[i]].wrapper);\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            portContainer.children = [];\n            canvas.children.push(portContainer);\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        canvas.arrange(canvas.desiredSize);\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var htmlLayer = getHTMLLayer(this.element.id);\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers();\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.views[temp];\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if (!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var container = document.getElementById(view.element.id);\n        var bounds = container.getBoundingClientRect();\n        var node;\n        var element;\n        var connector;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            element = this.basicElements[i];\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n        }\n        this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform) {\n        if (transform === void 0) { transform = true; }\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            for (var _b = 0, _c = Object.keys(layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var element = this.nameTable[layer.zIndexTable[node]].wrapper;\n                if (!(this.nameTable[layer.zIndexTable[node]].parentId)\n                    && !(this.nameTable[layer.zIndexTable[node]].processId)) {\n                    renderer.renderElement(element, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? this.scroller.transform : undefined);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                var pathSegment = canvas.children[0];\n                var data = pathSegment.data;\n                connector.getSegmentElement(connector, pathSegment);\n                if (pathSegment.data !== data) {\n                    canvas.measure(new Size());\n                    canvas.arrange(canvas.desiredSize);\n                    if (this.mode === 'SVG' && !isLoad) {\n                        this.updateDiagramObject(connector);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width;\n        height = view.contentHeight || view.diagramLayer.height;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            diagramLayer.setAttribute('width', (factor * width).toString());\n            diagramLayer.setAttribute('height', (factor * height).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n            this.updateSelector();\n            this.renderPageBreaks(bounds);\n        }\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n            this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]));\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                if (this.selectedItems.constraints & SelectorConstraints.UserHandle) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]));\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_1 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_1.children) {\n                        for (var _i = 0, _a = parent_1.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit(true);\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function (focusOut) {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textarea = document.getElementById(this.element.id + '_editBox');\n            var text = textarea.value;\n            EventHandler.remove(textarea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textarea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n            this.updateSelector();\n            update = true;\n        }\n        return update;\n    };\n    Diagram.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.commandHandler.isSelected(this.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.commandHandler.isSelected(this.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1 && segmentChange) {\n                        switch (connector.segments[0].direction) {\n                            case 'Bottom':\n                                tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                break;\n                            case 'Top':\n                                tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                break;\n                            case 'Left':\n                                tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                break;\n                            case 'Right':\n                                tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                break;\n                        }\n                        this.commandHandler.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined && !actualObject.children) {\n            actualObject.wrapper.children[0].width = node.width;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.height !== undefined && !actualObject.children) {\n            actualObject.wrapper.children[0].height = node.height;\n            update = true;\n            updateConnector = true;\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, true, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (!isLayout) {\n                this.connectorSegmentChange(actualObject, existingInnerBounds);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (this.mode === 'SVG') {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                var connector = this.nameTable[actualObject.inEdges[j]];\n                var conn = {\n                    sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                    targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n                };\n                this.connectorPropertyChange(connector, {}, conn);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                var connection = this.nameTable[actualObject.outEdges[k]];\n                var conn = {\n                    sourcePoint: connection.sourcePoint, targetPoint: connection.targetPoint, sourceID: connection.sourceID,\n                    targetID: connection.targetID, sourcePortID: connection.sourcePortID, targetPortID: connection.targetPortID\n                };\n                this.connectorPropertyChange(connection, {}, conn);\n            }\n        }\n        if (actualObject.parentId) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, newProp, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || canOutConnect(sourceNode)) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                if (!targetNode || canInConnect(targetNode)) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        }\n        //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'SVG') {\n            this.updateDiagramObject(actualObject);\n        }\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            this.updateDiagramObject(this.nameTable[element.id]);\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (canUpdateSize) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                changedObject.offset !== undefined) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width)\n                    - annotationWrapper.margin.left - annotationWrapper.margin.right;\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                annotationWrapper.constraints = changedObject.constraints;\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            if (changedObject.content !== undefined) {\n                if (annotationWrapper) {\n                    isMeasure = true;\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            annotationWrapper.refreshTextElement();\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    if (changedObject.shape === 'Custom' && changedObject.pathData) {\n                        portWrapper.data = String(changedObject.pathData);\n                        isMeasure = true;\n                    }\n                    else {\n                        var pathdata = getPortShape(changedObject.shape);\n                        portWrapper.data = pathdata;\n                    }\n                }\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content');\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect');\n                    var iconShape = getDiagramElement(icon.id + '_shape');\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element');\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode.parentId) {\n                this.updateGroupSize(tempNode);\n            }\n            else {\n                tempNode.wrapper.measure(new Size());\n                tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                this.updateGroupOffset(tempNode);\n                this.updateDiagramObject(tempNode);\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                newObj = newNode;\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            newObj.id += randomId();\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this['enterObject'] = newObj;\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                delete _this['enterObject'];\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol, target: _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    _this.add(clonedObject);\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = document.createElement('a');\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    pom.setAttribute('download', fileName + '.' + fileType);\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var img_1 = document.createElement('img');\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            img_1.setAttribute('id', this.diagram.element.id + '_printImage');\n            setAttributeHtml(img_1, attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = document.createElement('a');\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                htmlElement_1.setAttribute('download', fileName + '.' + fileType);\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = document.createElement('div');\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var img = document.createElement('img');\n        var attr;\n        var innerDiv = document.createElement('div');\n        attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        setAttributeHtml(img, attr);\n        setAttributeHtml(innerDiv, attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var img = document.createElement('img');\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        setAttributeHtml(img, attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width;\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height;\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen } from '../enum/enum';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        var item = this.getKeyFromId(args.item.id);\n        switch (item) {\n            case 'cut':\n                this.parent.cut();\n                break;\n            case 'copy':\n                this.parent.copy();\n                break;\n            case 'undo':\n                this.parent.undo();\n                break;\n            case 'redo':\n                this.parent.redo();\n                break;\n            case 'paste':\n                this.parent.paste();\n                break;\n            case 'selectAll':\n                this.parent.selectAll();\n                break;\n            case 'group':\n                this.parent.group();\n                break;\n            case 'unGroup':\n                this.parent.unGroup();\n                break;\n            case 'bringToFrontOrder':\n                this.parent.bringToFront();\n                break;\n            case 'moveForwardOrder':\n                this.parent.moveForward();\n                break;\n            case 'sendToBackOrder':\n                this.parent.sendToBack();\n                break;\n            case 'sendBackwardOrder':\n                this.parent.sendBackward();\n                break;\n        }\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            this.contextMenu.hideItems(this.hiddenItems, true);\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = this.intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.intersect2 = function (start1, end1, start2, end2) {\n        var point = { x: 0, y: 0 };\n        var lineUtil1 = this.getLineSegment(start1.x, start1.y, end1.x, end1.y);\n        var lineUtil2 = this.getLineSegment(start2.x, start2.y, end2.x, end2.y);\n        var line3 = intersect3(lineUtil1, lineUtil2);\n        if (line3.enabled) {\n            return line3.intersectPt;\n        }\n        else {\n            return point;\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.getLineSegment = function (x1, y1, x2, y2) {\n        return { 'X1': Number(x1) || 0, 'Y1': Number(y1) || 0, 'X2': Number(x2) || 0, 'Y2': Number(y2) || 0 };\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { getAdornerLayerSvg } from './../utility/dom-util';\nimport { isSelected } from '../interaction/actions';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            getAdornerLayerSvg(this.diagram.element.id).appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds = getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, getAdornerLayerSvg(this.diagram.element.id), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: getAdornerLayerSvg(this.diagram.element.id).id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = getAdornerLayerSvg(this.diagram.element.id).getElementById('_SnappingLines');\n        var line = getAdornerLayerSvg(this.diagram.element.id).getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            getAdornerLayerSvg(this.diagram.element.id).appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.remove(obj);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else {\n                    diagram.add(obj);\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(this.protectChange);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            this.protectChange = false;\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            diagram.updateDiagramObject(source);\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && node.isExpanded) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        if (node.offsetX > target.offsetX) {\n            points.push(nodeBounds.bottomCenter, { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) }, {\n                x: (targetBounds.middleRight.x + layout.horizontalSpacing / 2),\n                y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4)\n            }, { x: (targetBounds.middleRight.x + layout.horizontalSpacing / 2), y: targetBounds.middleRight.y }, targetBounds.middleRight);\n        }\n        else {\n            points.push(nodeBounds.bottomCenter, { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) }, {\n                x: (targetBounds.middleLeft.x - layout.horizontalSpacing / 2),\n                y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4)\n            }, { x: (targetBounds.middleLeft.x - layout.horizontalSpacing / 2), y: targetBounds.middleLeft.y }, targetBounds.middleLeft);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.nestedBestRanks[j][cell.temp[0]] = cell;\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement } from '../diagram/utility/diagram-util';\nimport { getFunction } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * Defines the behavior of a palette\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * Defines the size and position of the symbol palette\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.symbolTable = {};\n        _this.info = 'info';\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss;\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.prepareSymbol(symbol);\n            this.symbolTable[symbol.id] = symbol;\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var paletteDiv = document.createElement('div');\n        paletteDiv.setAttribute('id', symbolGroup.id);\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        paletteDiv.setAttribute('style', style);\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                this.prepareSymbol(obj);\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            content = symbol.init(this);\n        }\n        var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n        var getSymbolInfo = getFunction(this.getSymbolInfo);\n        if (getSymbolInfo) {\n            symbolInfo = getSymbolInfo(symbol);\n        }\n        symbolInfo = symbolInfo || {};\n        //defining custom templates\n        content.relativeMode = 'Object';\n        content.horizontalAlignment = content.verticalAlignment = 'Center';\n        symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n        symbolContainer.children = [content];\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        width = symbolInfo.width = symbolInfo.width ||\n            (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n        height = symbolInfo.height = symbolInfo.height ||\n            (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n        if (width !== undefined && height !== undefined) {\n            var actualWidth = width;\n            var actualHeight = height;\n            if (this.symbolWidth !== undefined) {\n                actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n            }\n            else {\n                width += obj.style.strokeWidth;\n            }\n            if (this.symbolHeight !== undefined) {\n                actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n            }\n            else {\n                height += obj.style.strokeWidth;\n            }\n            if (symbolInfo.description && symbolInfo.description.text !== '') {\n                actualHeight -= 20; // default height of the text have been reduced from the container.\n            }\n            sw = actualWidth / (content.width || width);\n            sh = actualHeight / (content.height || height);\n            if (symbolInfo.fit) {\n                sw = actualWidth / symbolInfo.width;\n                sh = actualHeight / symbolInfo.height;\n            }\n            width = actualWidth;\n            height = actualHeight;\n            sw = sh = Math.min(sw, sh);\n            symbolContainer.width = width;\n            symbolContainer.height = height;\n            content.width = symbolInfo.width;\n            content.height = symbolInfo.height;\n            this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n        }\n        else {\n            var outerBounds = void 0;\n            if (symbol instanceof Connector) {\n                outerBounds = getOuterBounds(symbol);\n            }\n            content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n            content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n        }\n        symbol.wrapper = stackPanel;\n        stackPanel.children = [symbolContainer];\n        content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n        stackPanel.id = content.id + '_symbol';\n        stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n        stackPanel.offsetX = symbol.style.strokeWidth / 2;\n        stackPanel.offsetY = symbol.style.strokeWidth / 2;\n        //symbol description-textElement\n        this.getSymbolDescription(symbolInfo, width, stackPanel);\n        stackPanel.measure(new Size());\n        stackPanel.arrange(stackPanel.desiredSize);\n        symbolInfo.width = symbolInfo.width || content.actualSize.width;\n        symbolInfo.height = symbolInfo.height || content.actualSize.height;\n        symbol[this.info] = symbolInfo;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            this.getSymbolContainer(symbol, parentDiv);\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content);\n        var previewContainer = createElement('div');\n        var div;\n        previewContainer.setAttribute('draggable', 'true');\n        previewContainer.setAttribute('class', 'e-dragclone');\n        previewContainer.style.pointerEvents = 'none';\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n            previewContainer.appendChild(canvas);\n            style += 'transform:scale(0.5);';\n            canvas.setAttribute('transform-origin', '0 0');\n            canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n            this.diagramRenderer.renderElement(content, canvas, undefined);\n        }\n        ((div && symbol.shape.type === 'HTML') ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content) {\n        if (content.children) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createElement('div', {\n            id: symbol.id + '_container',\n            styles: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden'\n        });\n        container.setAttribute('title', symbolInfo.description ? symbolInfo.description.text : symbol.id);\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n            container.appendChild(canvas);\n            canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n            this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined);\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && symbol.shape.type === 'HTML') ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (symbol.id + '_preview') : symbol.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                evt.preventDefault();\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            if (id !== this.selectedSymbol.id) {\n                var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n                oldSymbol.classList.remove('e-symbol-selected');\n                var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                var event_1 = 'paletteSelectionChange';\n                this.trigger(event_1, args);\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            container.style.backgroundColor = '';\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n        }\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = document.createElement('input');\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = document.createElement('div');\n            emptyDiv.setAttribute('id', 'EmptyDiv');\n            emptyDiv.innerHTML = 'No Items To Display';\n            emptyDiv.setAttribute('style', 'textAlign:center;fontStyle:italic');\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = document.createElement('div');\n        paletteDiv.setAttribute('id', 'SearchPalette');\n        paletteDiv.setAttribute('style', 'display:none;overflow:auto;');\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control\n * ```\n * <div id='overview'/>\n * <script>\n *   var overview = new overview({ width:'250px', height:'500px', sourceID: 'diagram' });\n *   overview.appendTo('#overview');\n * </script>\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = document.createElement('div');\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = document.createElement('div');\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var div = document.createElement('div');\n        var attr = { 'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer' };\n        setAttributeHtml(div, attr);\n        var htmlLayer = div;\n        div.style.pointerEvents = 'none';\n        div.style.position = 'absolute';\n        div.style.left = '0px';\n        div.style.top = '0px';\n        var htmlDiv = document.createElement('div');\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        setAttributeHtml(htmlDiv, options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById('overview_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","l","s","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","topCenter","bottomCenter","abs","middleRight","middleLeft","equals","containsPoint","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","j","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","findEndPoint","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","getOppositeDirection","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","X1","Y1","X2","Y2","createLineSegment","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","segmentPoints","wrapper","actualSize","constValue","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","topLeft","two","topRight","three","four","fourty5","one35","two25","three15","getOuterBounds","outerBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","Connector","constraints","ConnectorConstraints","Select","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canOutConnect","OutConnect","canResize","returnValue","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","DiagramConstraints","UserInteraction","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","PortConstraints","Draw","canDrag","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","completeRegion","region","selectedObjects","containsRect","findObjectType","drawingObject","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isPointOverConnector","intermediatePoints","k","bezierPoint1","bezierPoint2","pointsForBezier","rect","Rect","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","line","rotateAngle","parentTransform","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","index","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","cloneObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","_a","commandManager","name","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","connectors","mode","nodes","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","selectedNodes","getCollection","selectedItems","selcectedConnectors","concat","select","objNodes","diagramNodes","diagramNodes_1","updateStyle","changedObject","textElement","Object","keys","fill","StrokeStyle","textOverflow","opacity","strokeColor","strokeDashArray","strokeWidth","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","actualObject","minHeight","maxHeight","minWidth","maxWidth","horizontalAlignment","verticalAlignment","visible","Text","elementId","updateShape","oldObject","DiagramElement","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","basicShapeData","removeItem","array","item","indexOf","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","action","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","annotations","findPortIndex","ports","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","rotatePoint","newPosition","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","enterObject","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","text","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","createElement","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getDiagramElement","getElementsByClassName","getAdornerLayerSvg","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","parentNode","getBackgroundLayer","getNativeLayer","getHTMLLayer","elementType","attribute","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","parent","hasClass","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","contentId","querySelector","isHtml","compile","compiledString","cloneNode","svg","attributes","createMeasureElements","usageCount","divElement","styles","imageElement","createTextNode","tSpan","randomId","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","desiredSize","getValue","findToolToActivate","touchStart","touchMove","currentSymbol","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","forty","checkForResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","nameTable","parentId","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","AnnotationConstraints","Transform","RenderMode","KeyModifiers","Keys","DiagramEvent","contextMenuClick","contextMenuOpen","isDirt","Self","Parent","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","measure","availableSize","validateDesiredSize","arrange","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","textNodes","textWrapBounds","imageSource","stretch","measureImage","Canvas","leftMargin","topMargin","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","ShapeAnnotation","PathAnnotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","bridges","init","bpmnElement","container","getSegmentElement","getConnectorPoints","flow","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","pathseqData","pathseq","findPath","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","Default","CollectionFactory","UserHandle","All","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","processId","outEdges","inEdges","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","initContainer","canvas","borderColor","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","initAnnotationWrapper","portContent","pathdata","label","annotationcontent","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","cssFloat","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","trans","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getObjectType","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","drawImage","ctx_1","imageObj","onload","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","parentSvg","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","htmlLayer","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","w","h","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","grid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getDiagramLayer","getGridLayer","getPortsLayer","getExpandCollapseLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","ToolBase","protectChange","commandHandler","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","clearSelection","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","entry","redoObject","undoObject","category","addHistoryEntry","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","drop","endGroupAction","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","initialBounds","updateSize","sizeChange","entry_2","changes","getChanges","getPivot","change","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","scaleObjects","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","diagramCanvas","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","isDeleteKey","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","endEdit","findObjectsUnderMouse","findObjectUnderMouse","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","preventDefault","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","setInterval","doAutoScroll","detail","which","isMultipleSelect","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","keyDown","keyCode","keycode","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","startTextEdit","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","getWrapper","isAddTextNode","focusOut","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","actions","actualTarget","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","zIndex","findInteractableObject","_d","_e","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","updateDiagramObject","nodeEndId","portEndId","connectionEventChange","portId","argsTarget","transaction","success","failure","portEnd","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","UndoRedo","deleteChild","addChild","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","newObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","process","cloneGroup","cloneSubProcesses","innerChild","addProcess","connector_1","clonedNode","connectorTable","newChildren","childObj","prop","initObject","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","objectId","layerNum","refreshCanvasLayers","bringToFront","tabelLength","diagramLayer","diagramRenderer","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","drag","nodePropertyChange","hasEnds","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToPort","changeSourceEndToNode","secondSegment","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","parent_1","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","nodes_1","scaleObject","updateGroupOffset","isResize","refWrapper","oldleft","oldtop","parent_2","parent_3","changedvalues","nodeBounds","selectorBounds","top_2","expandNode","propChange","expand","expandCollapse","fixedNode","updateIcon","enableAnimation","organizationalChartModule","isAnimation","doLayout","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","undoObj","redoObj","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","DiagramScroller","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","scrollerWidth","diagramWidth","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","localeObj","L10n","locale","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","Render","requiredModules","modules","member","show","dataManager","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","canAdd","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","parentElement","addTextAnnotation","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","checkAndRemoveAnnotations","deleteGroup","removeBpmnProcesses","updateNodeEdges","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","ReadOnly","enableReadOnly","textEditing","textarea","toLocaleLowerCase","focusOutEdit","viewPort","updateLayout","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateDefaultLayoutIcons","connection","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","labels","removeLabels","element_1","removePorts","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","textAnnotationConnectors","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","dataSource","url","initSource","independentObj","currentLayer","getDefaults","defaults","initNode","getEndNodeWrapper","updateDefaultLayoutIcon","iconWrapper","portContainer","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","adornerSvg","highlighter","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","connectorSegmentChange","existingInnerBounds","segmentChange","isLayout","existingBounds","updateMargin","updateBPMN","actualPort","updatePort","checkSelectedItem","updateTextAnnotationProp","updateConnectorEdges","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","annotationWrapper","updateAnnotations","updateNodeProperty","selItems","canUpdateSize","isMeasure","portWrapper","String","iconRect","iconShape","enable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","out","dragLeave","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","then","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","annotationNode","setAnnotationPath","annotationConnector","bpmnShapeContent","annotationObj","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","checkAnnotation","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","pre","found","deg","self","zOrder","inter1","intersect2","checkForHorizontalLine","roundedAngle","start1","end1","start2","end2","line3","getLineSegment","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","line1","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","entryObject","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","addObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","historyEntry","ignoreProperty","getProperty","isRedo","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoEntry","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","rootNode","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","rows","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","columns","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","cell","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","prepareSymbol","renderPalette","paletteDiv","header","title","renderSymbols","addPaletteItem","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","stackPanel","symbolContainer","getSymbolTemplate","symbolInfo","symbolWidth","symbolHeight","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}